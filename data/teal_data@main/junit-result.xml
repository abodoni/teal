<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="filter_manager" timestamp="2023-10-17T08:45:33Z" hostname="d9cce0388342" tests="4" skipped="0" failures="0" errors="0" time="0.576">
    <testcase time="0.478" classname="filter_manager" name="filter_manager_srv_initializes_properly_processes_input_arguments"/>
    <testcase time="0.0230000000000001" classname="filter_manager" name="filter_manager_srv_initializes_properly_processes_input_arguments"/>
    <testcase time="0.0720000000000001" classname="filter_manager" name="filter_manager_srv_initializes_properly_processes_input_arguments"/>
    <testcase time="0.00299999999999989" classname="filter_manager" name="filter_manager_srv_initializes_properly_processes_input_arguments"/>
  </testsuite>
  <testsuite name="init" timestamp="2023-10-17T08:45:34Z" hostname="d9cce0388342" tests="41" skipped="0" failures="29" errors="0" time="10.664">
    <testcase time="0.135" classname="init" name="init_data_accepts_TealData_objects"/>
    <testcase time="0.0819999999999999" classname="init" name="init_data_accepts_TealData_objects">
      <failure type="failure" message="`init(data = teal_data_object, modules = mods)` threw an error. ('test-init.R:12:3')">`init(data = teal_data_object, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:12:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = teal_data_object, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.077" classname="init" name="init_data_accepts_TealData_objects">
      <failure type="failure" message="`init(data = cdisc_data_object, modules = mods)` threw an error. ('test-init.R:13:3')">`init(data = cdisc_data_object, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADTTE not in ADSL
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:13:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = cdisc_data_object, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0590000000000002" classname="init" name="init_data_throws_an_error_with_input_other_than_accepted_input"/>
    <testcase time="0.00700000000000012" classname="init" name="init_data_throws_an_error_with_input_other_than_accepted_input"/>
    <testcase time="0.00599999999999978" classname="init" name="init_data_throws_an_error_with_input_other_than_accepted_input"/>
    <testcase time="0.00700000000000012" classname="init" name="init_data_throws_an_error_with_input_other_than_accepted_input"/>
    <testcase time="0.00800000000000001" classname="init" name="init_data_throws_an_error_with_input_other_than_accepted_input"/>
    <testcase time="0.0670000000000002" classname="init" name="init_data_accepts_a_single_TealDataset_CDISCTealDataset">
      <failure type="failure" message="`init(data = teal.data::dataset(&quot;iris&quot;, head(iris)), modules = mods)` threw an error. ('test-init.R:30:3')">`init(data = teal.data::dataset("iris", head(iris)), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:30:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = teal.data::dataset("iris", head(iris)), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0839999999999996" classname="init" name="init_data_accepts_a_single_TealDataset_CDISCTealDataset">
      <failure type="failure" message="`init(...)` threw an error. ('test-init.R:31:3')">`init(...)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADTTE not in ADSL
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:31:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0820000000000003" classname="init" name="init_data_accepts_a_single_TealDataset_CDISCTealDataset">
      <failure type="failure" message="`init(data = dataset_1, modules = mods)` threw an error. ('test-init.R:38:3')">`init(data = dataset_1, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:38:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = dataset_1, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0859999999999999" classname="init" name="init_data_accepts_a_single_TealDataset_CDISCTealDataset">
      <failure type="failure" message="`init(data = adsl_dataset, modules = mods)` threw an error. ('test-init.R:39:3')">`init(data = adsl_dataset, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADTTE not in ADSL
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:39:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = adsl_dataset, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.129" classname="init" name="init_data_accepts_a_list_of_single_TealDataset_CDISCTealDataset_without_renaming">
      <failure type="failure" message="`init(data = list(teal.data::dataset(&quot;iris&quot;, head(iris))), modules = mods)` threw an error. ('test-init.R:48:3')">`init(data = list(teal.data::dataset("iris", head(iris))), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:48:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0939999999999999" classname="init" name="init_data_accepts_a_list_of_single_TealDataset_CDISCTealDataset_without_renaming">
      <failure type="failure" message="`init(...)` threw an error. ('test-init.R:49:3')">`init(...)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADTTE not in ADSL
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:49:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0850000000000004" classname="init" name="init_data_accepts_a_list_of_single_TealDataset_CDISCTealDataset_without_renaming">
      <failure type="failure" message="`init(data = dataset_list, modules = mods)` threw an error. ('test-init.R:55:3')">`init(data = dataset_list, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:55:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = dataset_list, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0859999999999999" classname="init" name="init_data_accepts_a_list_of_single_TealDataset_CDISCTealDataset_without_renaming">
      <failure type="failure" message="`init(data = cdisc_dataset_list, modules = mods)` threw an error. ('test-init.R:56:3')">`init(data = cdisc_dataset_list, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADTTE not in ADSL
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:56:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = cdisc_dataset_list, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.093" classname="init" name="init_data_accepts_a_single_dataframe">
      <failure type="failure" message="`init(data = adsl_df, modules = mods)` threw an error. ('test-init.R:60:3')">`init(data = adsl_df, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in adsl_df
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:60:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = adsl_df, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0899999999999999" classname="init" name="init_data_accepts_a_list_of_single_dataframe_without_renaming">
      <failure type="failure" message="`init(data = list(adsl_df), modules = mods)` threw an error. ('test-init.R:64:3')">`init(data = list(adsl_df), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in adsl_df
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:64:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(adsl_df), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0910000000000002" classname="init" name="init_data_accepts_a_list_of_single_dataframe_with_renaming">
      <failure type="failure" message="`init(data = list(data1 = adsl_df), modules = mods)` threw an error. ('test-init.R:69:3')">`init(data = list(data1 = adsl_df), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in data1
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:69:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(data1 = adsl_df), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.0909999999999997" classname="init" name="init_data_accepts_a_list_of_single_dataframe_with_renaming">
      <failure type="failure" message="`init(data = adsl_list, modules = mods)` threw an error. ('test-init.R:70:3')">`init(data = adsl_list, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in data1
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:70:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = adsl_list, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.105" classname="init" name="init_data_accepts_a_list_of_a_TealDataset_and_a_dataframe_without_renaming">
      <failure type="failure" message="`init(data = list(dataset_1, adsl_df), modules = mods)` threw an error. ('test-init.R:74:3')">`init(data = list(dataset_1, adsl_df), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris, adsl_df
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:74:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(dataset_1, adsl_df), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="6.828" classname="init" name="init_data_accepts_a_single_MultiAssayExperiment_object">
      <failure type="failure" message="`init(data = miniACC, modules = mods)` threw an error. ('test-init.R:79:3')">`init(data = miniACC, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in MAE
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:79:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = miniACC, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.200000000000001" classname="init" name="init_data_accepts_a_list_of_a_single_MultiAssayExperiment_object_without_renaming">
      <failure type="failure" message="`init(data = list(miniACC), modules = mods)` threw an error. ('test-init.R:84:3')">`init(data = list(miniACC), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in miniACC
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:84:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(miniACC), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.197999999999999" classname="init" name="init_data_accepts_a_list_of_a_single_MultiAssayExperiment_object_with_renaming">
      <failure type="failure" message="`init(data = list(x = miniACC), modules = mods)` threw an error. ('test-init.R:89:3')">`init(data = list(x = miniACC), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in x
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:89:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(x = miniACC), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.205" classname="init" name="init_data_acceptsa_mixed_list_of_MultiAssayExperiment_object_and_data.frame">
      <failure type="failure" message="`init(data = list(x = miniACC, y = head(iris)), modules = mods)` threw an error. ('test-init.R:94:3')">`init(data = list(x = miniACC, y = head(iris)), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in x, y
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:94:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(x = miniACC, y = head(iris)), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.134" classname="init" name="init_data_accepts_a_list_of_a_TealDataset_and_a_dataframe_with_renaming">
      <failure type="failure" message="`init(...)` threw an error. ('test-init.R:98:3')">`init(...)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris, data2
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:98:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.132" classname="init" name="init_data_accepts_a_list_of_a_TealDataset_and_a_dataframe_with_renaming">
      <failure type="failure" message="`init(data = list(data1 = dataset_1, data2 = adsl_df), modules = mods)` threw an error. ('test-init.R:105:3')">`init(data = list(data1 = dataset_1, data2 = adsl_df), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris, data2
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:105:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(data1 = dataset_1, data2 = adsl_df), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.133000000000001" classname="init" name="init_data_accepts_a_list_of_mixed_TealDataset_and_dataframe_with_mixed_renaming">
      <failure type="failure" message="`init(...)` threw an error. ('test-init.R:109:3')">`init(...)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris, adsl_df
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:109:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.125" classname="init" name="init_data_accepts_a_list_of_mixed_TealDataset_and_dataframe_with_mixed_renaming">
      <failure type="failure" message="`init(data = list(dataset_1, data2 = adsl_df), modules = mods)` threw an error. ('test-init.R:110:3')">`init(data = list(dataset_1, data2 = adsl_df), modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris, data2
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:110:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = list(dataset_1, data2 = adsl_df), modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.138" classname="init" name="init_data_accepts_TealDatasetConnector_object">
      <failure type="failure" message="`init(data = dsc1, modules = mods)` threw an error. ('test-init.R:115:3')">`init(data = dsc1, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(init(data = dsc1, modules = mods), NA) at test-init.R:115:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = dsc1, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.119" classname="init" name="init_data_accepts_TealDatasetConnector_object">
      <failure type="failure" message="`init(...)` threw an error. ('test-init.R:116:3')">`init(...)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:116:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.129" classname="init" name="init_data_accepts_a_list_of_TealDatasetConnector_object">
      <failure type="failure" message="`init(data = dsc1, modules = mods)` threw an error. ('test-init.R:124:3')">`init(data = dsc1, modules = mods)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(init(data = dsc1, modules = mods), NA) at test-init.R:124:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(data = dsc1, modules = mods)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.123000000000001" classname="init" name="init_data_accepts_a_list_of_TealDatasetConnector_object">
      <failure type="failure" message="`init(...)` threw an error. ('test-init.R:125:3')">`init(...)` threw an error.
Message: Module aaa1 has datanames that are not available in a 'data':
 ADSL, ADTTE not in iris
Class:   simpleError/error/condition
Backtrace:
     ▆
  1. ├─testthat::expect_error(...) at test-init.R:125:2
  2. │ └─testthat:::quasi_capture(...)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ └─base::withCallingHandlers(...)
  5. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  6. └─teal::init(...)
  7.   └─teal (local) resolve_modules_datanames(modules = modules)
  8.     └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
  9.       └─base::lapply(X = X, FUN = FUN, ...)
 10.         └─teal (local) FUN(X[[i]], ...)
 11.           └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 12.             └─base::lapply(X = X, FUN = FUN, ...)
 13.               └─teal (local) FUN(X[[i]], ...)
 14.                 └─base::sapply(modules$children, resolve_modules_datanames, simplify = FALSE)
 15.                   └─base::lapply(X = X, FUN = FUN, ...)
 16.                     └─teal (local) FUN(X[[i]], ...)</failure>
    </testcase>
    <testcase time="0.222" classname="init" name="init_modules_accepts_a_teal_modules_object"/>
    <testcase time="0.0920000000000005" classname="init" name="init_modules_accepts_a_list_of_teal_module_elements"/>
    <testcase time="0.0909999999999993" classname="init" name="init_modules_accepts_a_teal_module_object"/>
    <testcase time="0.0990000000000002" classname="init" name="init_filter_accepts_named_list_or_teal_slices_">
      <failure type="failure" message="Expected `init(data = dataset_1, modules = mods, filter = fl)` to run without any errors. ('test-init.R:157:3')">Expected `init(data = dataset_1, modules = mods, filter = fl)` to run without any errors.
ℹ Actually got a &lt;simpleError&gt; with text:
  Module aaa1 has datanames that are not available in a 'data':
   ADSL, ADTTE not in iris</failure>
    </testcase>
    <testcase time="0.0169999999999995" classname="init" name="init_filter_accepts_named_list_or_teal_slices_"/>
    <testcase time="0.0780000000000012" classname="init" name="init_filter_accepts_named_list_or_teal_slices_">
      <failure type="failure" message="Expected `init(data = dataset_1, modules = mods, filter = fs)` to run without any errors. ('test-init.R:158:3')">Expected `init(data = dataset_1, modules = mods, filter = fs)` to run without any errors.
ℹ Actually got a &lt;simpleError&gt; with text:
  Module aaa1 has datanames that are not available in a 'data':
   ADSL, ADTTE not in iris</failure>
    </testcase>
    <testcase time="0.0169999999999995" classname="init" name="init_filter_accepts_named_list_or_teal_slices_"/>
    <testcase time="0.0199999999999996" classname="init" name="init_filter_accepts_named_list_or_teal_slices_"/>
  </testsuite>
  <testsuite name="module_nested_tabs" timestamp="2023-10-17T08:45:45Z" hostname="d9cce0388342" tests="38" skipped="0" failures="0" errors="0" time="1.902">
    <testcase time="0.0400000000000009" classname="module_nested_tabs" name="srv_nested_tabs_throws_error_if_reporter_is_not_inherited_from_class_Reporter"/>
    <testcase time="0.0749999999999993" classname="module_nested_tabs" name="passed_shiny_module_is_initialized_only_when_the_UI_is_triggered"/>
    <testcase time="0.0600000000000005" classname="module_nested_tabs" name="passed_shiny_module_is_initialized_only_when_the_UI_is_triggered"/>
    <testcase time="0.0499999999999989" classname="module_nested_tabs" name="nested_teal_modules_are_initialized_when_the_UI_is_triggered"/>
    <testcase time="0.0920000000000005" classname="module_nested_tabs" name="nested_teal_modules_are_initialized_when_the_UI_is_triggered"/>
    <testcase time="0.048" classname="module_nested_tabs" name="modules_reactive_is_a_list_of_reactives"/>
    <testcase time="0.00200000000000067" classname="module_nested_tabs" name="modules_reactive_is_a_list_of_reactives"/>
    <testcase time="0.00300000000000011" classname="module_nested_tabs" name="modules_reactive_is_a_list_of_reactives"/>
    <testcase time="0.0659999999999989" classname="module_nested_tabs" name="modules_reactive_returns_modules_according_to_selection_in_the_nested_tabs"/>
    <testcase time="0.0300000000000011" classname="module_nested_tabs" name="modules_reactive_returns_modules_according_to_selection_in_the_nested_tabs"/>
    <testcase time="0.0119999999999987" classname="module_nested_tabs" name="Change_of_this_tab_returns_active_module_from_this_tab"/>
    <testcase time="0.0080000000000009" classname="module_nested_tabs" name="Change_of_this_tab_returns_active_module_from_this_tab"/>
    <testcase time="0.0469999999999988" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_does_not_pass_data_if_not_in_the_args_explicitly"/>
    <testcase time="0.106000000000002" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_does_pass_data_if_in_the_args_explicitly"/>
    <testcase time="0.0559999999999992" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_passes_data_to_the_server_module"/>
    <testcase time="0.0240000000000009" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_passes_datasets_to_the_server_module"/>
    <testcase time="0.0249999999999986" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_passes_server_args_to_the_..."/>
    <testcase time="0.0560000000000009" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_warns_if_both_data_and_datasets_are_passed"/>
    <testcase time="0.0410000000000004" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_doesn_t_pass_filter_panel_api_if_not_in_the_args_explicitly"/>
    <testcase time="0.0380000000000003" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_passes_filter_panel_api_when_passed_in_the_args_explicitly"/>
    <testcase time="0.0259999999999998" classname="module_nested_tabs" name="srv_nested_tabs.teal_module_passes_filter_panel_api_to_the_server_module"/>
    <testcase time="0.344999999999999" classname="module_nested_tabs" name=".datasets_to_data_accepts_a_reactiveVal_as_trigger_data_input"/>
    <testcase time="0.0910000000000011" classname="module_nested_tabs" name=".datasets_to_data_throws_error_if_trigger_data_is_not_a_reactiveVal_function"/>
    <testcase time="0.125999999999999" classname="module_nested_tabs" name=".datasets_to_data_returns_data_which_is_filtered"/>
    <testcase time="0.00399999999999956" classname="module_nested_tabs" name=".datasets_to_data_returns_data_which_is_filtered"/>
    <testcase time="0.0520000000000014" classname="module_nested_tabs" name=".datasets_to_data_returns_only_data_requested_by_modules_datanames"/>
    <testcase time="0.0559999999999992" classname="module_nested_tabs" name=".datasets_to_data_returns_tdata_object"/>
    <testcase time="0.00999999999999979" classname="module_nested_tabs" name=".datasets_to_data_returns_tdata_object"/>
    <testcase time="0.0259999999999998" classname="module_nested_tabs" name=".datasets_to_data_returns_tdata_object"/>
    <testcase time="0.00200000000000067" classname="module_nested_tabs" name=".datasets_to_data_returns_tdata_object"/>
    <testcase time="0.00600000000000023" classname="module_nested_tabs" name=".datasets_to_data_returns_tdata_object"/>
    <testcase time="0.0510000000000002" classname="module_nested_tabs" name="calculate_hashes_takes_a_FilteredData_and_vector_of_datanames_as_input"/>
    <testcase time="0.0329999999999995" classname="module_nested_tabs" name="calculate_hashes_takes_a_FilteredData_and_vector_of_datanames_as_input"/>
    <testcase time="0.0609999999999999" classname="module_nested_tabs" name="calculate_hashes_returns_a_named_list"/>
    <testcase time="0.00200000000000067" classname="module_nested_tabs" name="calculate_hashes_returns_a_named_list"/>
    <testcase time="0.00199999999999889" classname="module_nested_tabs" name="calculate_hashes_returns_a_named_list"/>
    <testcase time="0.113000000000001" classname="module_nested_tabs" name="calculate_hashes_returns_the_hash_of_the_non_Filtered_dataset"/>
    <testcase time="0.0169999999999995" classname="module_nested_tabs" name="calculate_hashes_returns_the_hash_of_the_non_Filtered_dataset"/>
  </testsuite>
  <testsuite name="module_tabs_with_filters" timestamp="2023-10-17T08:45:47Z" hostname="d9cce0388342" tests="8" skipped="0" failures="0" errors="0" time="1.626">
    <testcase time="0.0259999999999998" classname="module_tabs_with_filters" name="srv_tabs_with_filters_throws_error_if_reporter_is_not_of_class_Reporter"/>
    <testcase time="0.624000000000001" classname="module_tabs_with_filters" name="active_module_returns_module_specs_from_active_tab_when_filter.module_specific_FALSE"/>
    <testcase time="0.0649999999999995" classname="module_tabs_with_filters" name="active_module_returns_module_specs_from_active_tab_when_filter.module_specific_FALSE"/>
    <testcase time="0.0280000000000005" classname="module_tabs_with_filters" name="srv_tabs_with_filters_throws_error_if_reporter_is_not_of_class_Reporter"/>
    <testcase time="0.343" classname="module_tabs_with_filters" name="active_datanames_returns_dataname_from_single_tab"/>
    <testcase time="0.225" classname="module_tabs_with_filters" name="active_datanames_returns_dataname_from_active_tab_after_change"/>
    <testcase time="0.280000000000001" classname="module_tabs_with_filters" name="active_datanames_returns_dataname_from_active_tab_after_change"/>
    <testcase time="0.0350000000000001" classname="module_tabs_with_filters" name="active_datanames_returns_dataname_from_active_tab_after_change"/>
  </testsuite>
  <testsuite name="module_teal" timestamp="2023-10-17T08:45:48Z" hostname="d9cce0388342" tests="5" skipped="0" failures="0" errors="4" time="0.368">
    <testcase time="0.0600000000000023" classname="module_teal" name="srv_teal_fails_when_raw_data_is_not_reactive"/>
    <testcase time="0.0380000000000003" classname="module_teal" name="srv_teal_initializes_the_data_when_raw_data_changes">
      <error type="error" message="&lt;shiny.silent.error/validation/error/condition&gt; ('test-module_teal.R:38:7')">&lt;shiny.silent.error/validation/error/condition&gt;
Error: 
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:30:2
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   └─env$runWith(self, func)
 13. │ │ │     └─shiny (local) contextFunc()
 14. │ │ │       └─shiny::..stacktraceon..(expr)
 15. │ │ ├─shiny::withReactiveDomain(...)
 16. │ │ │ └─promises::with_promise_domain(...)
 17. │ │ │   └─domain$wrapSync(expr)
 18. │ │ │     └─base::force(expr)
 19. │ │ └─withr::with_options(...)
 20. │ │   └─base::force(code)
 21. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 22. ├─testthat::expect_null(datasets_reactive()) at test-module_teal.R:38:6
 23. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 24. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 25. └─shiny (local) datasets_reactive()
 26.   ├─shiny::..stacktraceoff..(self$.updateValue())
 27.   └─self$.updateValue()
 28.     └─ctx$run(...)
 29.       ├─promises::with_promise_domain(...)
 30.       │ └─domain$wrapSync(expr)
 31.       ├─shiny::withReactiveDomain(...)
 32.       │ └─promises::with_promise_domain(...)
 33.       │   └─domain$wrapSync(expr)
 34.       │     └─base::force(expr)
 35.       └─env$runWith(self, func)
 36.         └─shiny (local) contextFunc()
 37.           ├─base::withCallingHandlers(...)
 38.           ├─base::withVisible(.func())
 39.           └─shiny (local) .func()
 40.             └─shiny (local) `&lt;reactive:eventReactive(raw_data())&gt;`(...)
 41.               └─shiny:::hybrid_chain(...)
 42.                 └─shiny (local) do()
 43.                   └─base::tryCatch(...)
 44.                     └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 45.                       └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 46.                         └─value[[3L]](cond)</error>
    </testcase>
    <testcase time="0.0990000000000002" classname="module_teal" name="srv_teal_initialized_data_list_structure_reflects_modules">
      <error type="error" message="Error in `teal_data_to_filtered_data(raw_data())`: Assertion on 'x' failed: Must inherit from class 'teal_data', but has classes 'TealData','TealDataAbstract','R6'. ('test-module_teal.R:55:7')">Error in `teal_data_to_filtered_data(raw_data())`: Assertion on 'x' failed: Must inherit from class 'teal_data', but has classes 'TealData','TealDataAbstract','R6'.
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:46:2
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   └─env$runWith(self, func)
 13. │ │ │     └─shiny (local) contextFunc()
 14. │ │ │       └─shiny::..stacktraceon..(expr)
 15. │ │ ├─shiny::withReactiveDomain(...)
 16. │ │ │ └─promises::with_promise_domain(...)
 17. │ │ │   └─domain$wrapSync(expr)
 18. │ │ │     └─base::force(expr)
 19. │ │ └─withr::with_options(...)
 20. │ │   └─base::force(code)
 21. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 22. ├─testthat::expect_named(datasets_reactive(), c("iris_tab", "tab")) at test-module_teal.R:55:6
 23. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 24. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 25. └─shiny (local) datasets_reactive()
 26.   ├─shiny::..stacktraceoff..(self$.updateValue())
 27.   └─self$.updateValue()
 28.     └─ctx$run(...)
 29.       ├─promises::with_promise_domain(...)
 30.       │ └─domain$wrapSync(expr)
 31.       ├─shiny::withReactiveDomain(...)
 32.       │ └─promises::with_promise_domain(...)
 33.       │   └─domain$wrapSync(expr)
 34.       │     └─base::force(expr)
 35.       └─env$runWith(self, func)
 36.         └─shiny (local) contextFunc()
 37.           ├─base::withCallingHandlers(...)
 38.           ├─base::withVisible(.func())
 39.           └─shiny (local) .func()
 40.             └─shiny (local) `&lt;reactive:eventReactive(raw_data())&gt;`(...)
 41.               └─shiny:::hybrid_chain(...)
 42.                 └─shiny (local) do()
 43.                   └─base::tryCatch(...)
 44.                     └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 45.                       └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 46.                         └─value[[3L]](cond)</error>
    </testcase>
    <testcase time="0.0909999999999975" classname="module_teal" name="srv_teal_initialized_data_containing_same_FilteredData_when_the_filter_is_global">
      <error type="error" message="Error in `teal_data_to_filtered_data(raw_data())`: Assertion on 'x' failed: Must inherit from class 'teal_data', but has classes 'TealData','TealDataAbstract','R6'. ('test-module_teal.R:72:7')">Error in `teal_data_to_filtered_data(raw_data())`: Assertion on 'x' failed: Must inherit from class 'teal_data', but has classes 'TealData','TealDataAbstract','R6'.
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:62:2
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   └─env$runWith(self, func)
 13. │ │ │     └─shiny (local) contextFunc()
 14. │ │ │       └─shiny::..stacktraceon..(expr)
 15. │ │ ├─shiny::withReactiveDomain(...)
 16. │ │ │ └─promises::with_promise_domain(...)
 17. │ │ │   └─domain$wrapSync(expr)
 18. │ │ │     └─base::force(expr)
 19. │ │ └─withr::with_options(...)
 20. │ │   └─base::force(code)
 21. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 22. ├─base::unlist(datasets_reactive(), use.names = FALSE) at test-module_teal.R:72:6
 23. └─shiny (local) datasets_reactive()
 24.   ├─shiny::..stacktraceoff..(self$.updateValue())
 25.   └─self$.updateValue()
 26.     └─ctx$run(...)
 27.       ├─promises::with_promise_domain(...)
 28.       │ └─domain$wrapSync(expr)
 29.       ├─shiny::withReactiveDomain(...)
 30.       │ └─promises::with_promise_domain(...)
 31.       │   └─domain$wrapSync(expr)
 32.       │     └─base::force(expr)
 33.       └─env$runWith(self, func)
 34.         └─shiny (local) contextFunc()
 35.           ├─base::withCallingHandlers(...)
 36.           ├─base::withVisible(.func())
 37.           └─shiny (local) .func()
 38.             └─shiny (local) `&lt;reactive:eventReactive(raw_data())&gt;`(...)
 39.               └─shiny:::hybrid_chain(...)
 40.                 └─shiny (local) do()
 41.                   └─base::tryCatch(...)
 42.                     └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 43.                       └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 44.                         └─value[[3L]](cond)</error>
    </testcase>
    <testcase time="0.0799999999999983" classname="module_teal" name="srv_teal_initialized_data_containing_different_FilteredData_when_the_filter_is_module_specific">
      <error type="error" message="Error in `teal_data_to_filtered_data(raw_data())`: Assertion on 'x' failed: Must inherit from class 'teal_data', but has classes 'TealData','TealDataAbstract','R6'. ('test-module_teal.R:90:7')">Error in `teal_data_to_filtered_data(raw_data())`: Assertion on 'x' failed: Must inherit from class 'teal_data', but has classes 'TealData','TealDataAbstract','R6'.
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal.R:80:2
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   └─env$runWith(self, func)
 13. │ │ │     └─shiny (local) contextFunc()
 14. │ │ │       └─shiny::..stacktraceon..(expr)
 15. │ │ ├─shiny::withReactiveDomain(...)
 16. │ │ │ └─promises::with_promise_domain(...)
 17. │ │ │   └─domain$wrapSync(expr)
 18. │ │ │     └─base::force(expr)
 19. │ │ └─withr::with_options(...)
 20. │ │   └─base::force(code)
 21. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 22. ├─base::unlist(datasets_reactive(), use.names = FALSE) at test-module_teal.R:90:6
 23. └─shiny (local) datasets_reactive()
 24.   ├─shiny::..stacktraceoff..(self$.updateValue())
 25.   └─self$.updateValue()
 26.     └─ctx$run(...)
 27.       ├─promises::with_promise_domain(...)
 28.       │ └─domain$wrapSync(expr)
 29.       ├─shiny::withReactiveDomain(...)
 30.       │ └─promises::with_promise_domain(...)
 31.       │   └─domain$wrapSync(expr)
 32.       │     └─base::force(expr)
 33.       └─env$runWith(self, func)
 34.         └─shiny (local) contextFunc()
 35.           ├─base::withCallingHandlers(...)
 36.           ├─base::withVisible(.func())
 37.           └─shiny (local) .func()
 38.             └─shiny (local) `&lt;reactive:eventReactive(raw_data())&gt;`(...)
 39.               └─shiny:::hybrid_chain(...)
 40.                 └─shiny (local) do()
 41.                   └─base::tryCatch(...)
 42.                     └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 43.                       └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 44.                         └─value[[3L]](cond)</error>
    </testcase>
  </testsuite>
  <testsuite name="module_teal_with_splash" timestamp="2023-10-17T08:45:49Z" hostname="d9cce0388342" tests="4" skipped="0" failures="0" errors="4" time="0.367">
    <testcase time="0.0940000000000012" classname="module_teal_with_splash" name="srv_teal_with_splash_creates_reactiveVal_returning_data_input">
      <error type="error" message="Error in `checkSlotAssignment(object, name, value)`: assignment of an object of class &quot;character&quot; is not valid for slot 'code' in an object of class &quot;qenv&quot;; is(value, &quot;expression&quot;) is not TRUE ('test-module_teal_with_splash.R:11:3')">Error in `checkSlotAssignment(object, name, value)`: assignment of an object of class "character" is not valid for slot 'code' in an object of class "qenv"; is(value, "expression") is not TRUE
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-module_teal_with_splash.R:11:2
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   ├─rlang::exec(app, !!!args)
 22.   └─teal (local) `&lt;fn&gt;`(id = "test", data = `&lt;TealData&gt;`, modules = `&lt;tel_mdls&gt;`)
 23.     └─shiny::moduleServer(...)
 24.       ├─session$setReturned(callModule(module, id, session = session))
 25.       └─shiny::callModule(module, id, session = session)
 26.         ├─shiny::withReactiveDomain(...)
 27.         │ └─promises::with_promise_domain(...)
 28.         │   └─domain$wrapSync(expr)
 29.         │     └─base::force(expr)
 30.         └─teal::module(...)
 31.           ├─teal.data::new_teal_data(...)
 32.           └─teal.data::new_teal_data(...)
 33.             └─methods::new(...)
 34.               ├─methods::initialize(value, ...)
 35.               └─methods::initialize(value, ...)
 36.                 └─methods::validObject(.Object)
 37.                   ├─methods (local) anyStrings(validityMethod(as(object, superClass)))
 38.                   │ └─base::isTRUE(x)
 39.                   ├─teal.code (local) validityMethod(as(object, superClass))
 40.                   └─methods::as(object, superClass)
 41.                     └─teal.data (local) asMethod(object)
 42.                       └─methods::`slot&lt;-`(`*tmp*`, what, value = `&lt;chr&gt;`)
 43.                         └─methods::checkSlotAssignment(object, name, value)</error>
    </testcase>
    <testcase time="0.0949999999999989" classname="module_teal_with_splash" name="srv_teal_with_splash_creates_raw_data_based_on_DDL_returns_NULL_before_loading">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'data' in selecting a method for function 'new_teal_data': attempt to apply non-function ('test-module_teal_with_splash.R:28:3')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'data' in selecting a method for function 'new_teal_data': attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal_with_splash.R:28:2
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   └─env$runWith(self, func)
 13. │ │ │     └─shiny (local) contextFunc()
 14. │ │ │       └─shiny::..stacktraceon..(expr)
 15. │ │ ├─shiny::withReactiveDomain(...)
 16. │ │ │ └─promises::with_promise_domain(...)
 17. │ │ │   └─domain$wrapSync(expr)
 18. │ │ │     └─base::force(expr)
 19. │ │ └─withr::with_options(...)
 20. │ │   └─base::force(code)
 21. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 22. ├─testthat::expect_null(raw_data())
 23. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 24. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 25. ├─shiny (local) raw_data()
 26. │ ├─shiny::..stacktraceoff..(self$.updateValue())
 27. │ └─self$.updateValue()
 28. │   └─ctx$run(...)
 29. │     ├─promises::with_promise_domain(...)
 30. │     │ └─domain$wrapSync(expr)
 31. │     ├─shiny::withReactiveDomain(...)
 32. │     │ └─promises::with_promise_domain(...)
 33. │     │   └─domain$wrapSync(expr)
 34. │     │     └─base::force(expr)
 35. │     └─env$runWith(self, func)
 36. │       └─shiny (local) contextFunc()
 37. │         ├─base::withCallingHandlers(...)
 38. │         ├─base::withVisible(.func())
 39. │         └─shiny (local) .func()
 40. │           ├─shiny::..stacktraceon..(`&lt;reactive&gt;`(...))
 41. │           └─teal (local) `&lt;reactive&gt;`(...)
 42. │             ├─teal.data::new_teal_data(...)
 43. │             └─base::lapply(data$get_datasets(), function(x) x$get_raw_data())
 44. └─base::.handleSimpleError(...)
 45.   └─base (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.0940000000000012" classname="module_teal_with_splash" name="srv_teal_with_splash_creates_raw_data_based_on_DDL_returns_pulled_data_when_loaded">
      <error type="error" message="Error in `h(simpleError(msg, call))`: error in evaluating the argument 'data' in selecting a method for function 'new_teal_data': attempt to apply non-function ('test-module_teal_with_splash.R:51:7')">Error in `h(simpleError(msg, call))`: error in evaluating the argument 'data' in selecting a method for function 'new_teal_data': attempt to apply non-function
Backtrace:
     ▆
  1. ├─shiny::testServer(...) at test-module_teal_with_splash.R:43:2
  2. │ ├─shiny:::withMockContext(...)
  3. │ │ ├─shiny::isolate(...)
  4. │ │ │ ├─shiny::..stacktraceoff..(...)
  5. │ │ │ └─ctx$run(...)
  6. │ │ │   ├─promises::with_promise_domain(...)
  7. │ │ │   │ └─domain$wrapSync(expr)
  8. │ │ │   ├─shiny::withReactiveDomain(...)
  9. │ │ │   │ └─promises::with_promise_domain(...)
 10. │ │ │   │   └─domain$wrapSync(expr)
 11. │ │ │   │     └─base::force(expr)
 12. │ │ │   └─env$runWith(self, func)
 13. │ │ │     └─shiny (local) contextFunc()
 14. │ │ │       └─shiny::..stacktraceon..(expr)
 15. │ │ ├─shiny::withReactiveDomain(...)
 16. │ │ │ └─promises::with_promise_domain(...)
 17. │ │ │   └─domain$wrapSync(expr)
 18. │ │ │     └─base::force(expr)
 19. │ │ └─withr::with_options(...)
 20. │ │   └─base::force(code)
 21. │ └─rlang::eval_tidy(quosure, mask, rlang::caller_env())
 22. ├─testthat::expect_null(raw_data()) at test-module_teal_with_splash.R:51:6
 23. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
 24. │   └─rlang::eval_bare(expr, quo_get_env(quo))
 25. ├─shiny (local) raw_data()
 26. │ ├─shiny::..stacktraceoff..(self$.updateValue())
 27. │ └─self$.updateValue()
 28. │   └─ctx$run(...)
 29. │     ├─promises::with_promise_domain(...)
 30. │     │ └─domain$wrapSync(expr)
 31. │     ├─shiny::withReactiveDomain(...)
 32. │     │ └─promises::with_promise_domain(...)
 33. │     │   └─domain$wrapSync(expr)
 34. │     │     └─base::force(expr)
 35. │     └─env$runWith(self, func)
 36. │       └─shiny (local) contextFunc()
 37. │         ├─base::withCallingHandlers(...)
 38. │         ├─base::withVisible(.func())
 39. │         └─shiny (local) .func()
 40. │           ├─shiny::..stacktraceon..(`&lt;reactive&gt;`(...))
 41. │           └─teal (local) `&lt;reactive&gt;`(...)
 42. │             ├─teal.data::new_teal_data(...)
 43. │             └─base::lapply(data$get_datasets(), function(x) x$get_raw_data())
 44. └─base::.handleSimpleError(...)
 45.   └─base (local) h(simpleError(msg, call))</error>
    </testcase>
    <testcase time="0.0839999999999996" classname="module_teal_with_splash" name="srv_teal_with_splash_gets_observe_event_from_srv_teal">
      <error type="error" message="Error in `checkSlotAssignment(object, name, value)`: assignment of an object of class &quot;character&quot; is not valid for slot 'code' in an object of class &quot;qenv&quot;; is(value, &quot;expression&quot;) is not TRUE ('test-module_teal_with_splash.R:60:3')">Error in `checkSlotAssignment(object, name, value)`: assignment of an object of class "character" is not valid for slot 'code' in an object of class "qenv"; is(value, "expression") is not TRUE
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-module_teal_with_splash.R:60:2
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   ├─rlang::exec(app, !!!args)
 22.   └─teal (local) `&lt;fn&gt;`(id = "test", data = `&lt;TealData&gt;`, modules = `&lt;tel_mdls&gt;`)
 23.     └─shiny::moduleServer(...)
 24.       ├─session$setReturned(callModule(module, id, session = session))
 25.       └─shiny::callModule(module, id, session = session)
 26.         ├─shiny::withReactiveDomain(...)
 27.         │ └─promises::with_promise_domain(...)
 28.         │   └─domain$wrapSync(expr)
 29.         │     └─base::force(expr)
 30.         └─teal::module(...)
 31.           ├─teal.data::new_teal_data(...)
 32.           └─teal.data::new_teal_data(...)
 33.             └─methods::new(...)
 34.               ├─methods::initialize(value, ...)
 35.               └─methods::initialize(value, ...)
 36.                 └─methods::validObject(.Object)
 37.                   ├─methods (local) anyStrings(validityMethod(as(object, superClass)))
 38.                   │ └─base::isTRUE(x)
 39.                   ├─teal.code (local) validityMethod(as(object, superClass))
 40.                   └─methods::as(object, superClass)
 41.                     └─teal.data (local) asMethod(object)
 42.                       └─methods::`slot&lt;-`(`*tmp*`, what, value = slot(from, what))
 43.                         └─methods::checkSlotAssignment(object, name, value)</error>
    </testcase>
  </testsuite>
  <testsuite name="modules" timestamp="2023-10-17T08:45:49Z" hostname="d9cce0388342" tests="91" skipped="0" failures="0" errors="0" time="0.655">
    <testcase time="0.0560000000000009" classname="modules" name="Calling_module_does_not_throw"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00800000000000267" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00799999999999912" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.00600000000000023" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00300000000000011" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00800000000000267" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00799999999999912" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00799999999999912" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.00799999999999912" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.00700000000000145" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00800000000000267" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.0069999999999979" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00200000000000244" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00100000000000122" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00100000000000122" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00199999999999889" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.0109999999999992" classname="modules" name="modules_gives_error_if_no_arguments_other_than_label_are_used"/>
    <testcase time="0.0069999999999979" classname="modules" name="modules_gives_error_if_no_arguments_other_than_label_are_used"/>
    <testcase time="0.00700000000000145" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00700000000000145" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00799999999999912" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.0069999999999979" classname="modules" name="modules_accept_teal_module_in_..."/>
    <testcase time="0.00700000000000145" classname="modules" name="modules_accept_multiple_teal_module_objects_in_..."/>
    <testcase time="0.00700000000000145" classname="modules" name="modules_accept_multiple_teal_module_and_teal_modules_objects_in_..."/>
    <testcase time="0.0120000000000005" classname="modules" name="modules_does_not_accept_objects_other_than_teal_module_s_in_..."/>
    <testcase time="0.0119999999999969" classname="modules" name="modules_does_not_accept_objects_other_than_teal_module_s_in_..."/>
    <testcase time="0.00700000000000145" classname="modules" name="modules_returns_teal_modules_object_with_label_and_children_slot"/>
    <testcase time="0.00199999999999889" classname="modules" name="modules_returns_teal_modules_object_with_label_and_children_slot"/>
    <testcase time="0.0210000000000008" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.0130000000000017" classname="modules" name="modules_returns_useful_error_message_if_label_argument_not_explicitly_named"/>
    <testcase time="0.0069999999999979" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00199999999999889" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00800000000000267" classname="modules" name="modules_depth_accepts_depth_as_integer"/>
    <testcase time="0.00799999999999912" classname="modules" name="modules_depth_accepts_depth_as_integer"/>
    <testcase time="0.0069999999999979" classname="modules" name="modules_depth_returns_depth_0_by_default"/>
    <testcase time="0.00799999999999912" classname="modules" name="modules_depth_accepts_modules_to_be_teal_module_or_teal_modules"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_depth_accepts_modules_to_be_teal_module_or_teal_modules"/>
    <testcase time="0.00800000000000267" classname="modules" name="modules_depth_returns_depth_same_as_input_for_teal_module"/>
    <testcase time="0.00799999999999912" classname="modules" name="modules_depth_increases_depth_by_1_for_each_teal_modules"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_depth_increases_depth_by_1_for_each_teal_modules"/>
    <testcase time="0.0120000000000005" classname="modules" name="is_arg_used_throws_error_if_object_is_not_teal_module_or_teal_modules"/>
    <testcase time="0.00799999999999912" classname="modules" name="is_arg_used_throws_error_if_object_is_not_teal_module_or_teal_modules"/>
    <testcase time="0.0109999999999992" classname="modules" name="is_arg_used_returns_true_if_teal_module_has_given_arg_in_server_function_args"/>
    <testcase time="0.0100000000000016" classname="modules" name="is_arg_used_returns_false_if_teal_module_does_not_have_reporter_in_server_function_args"/>
    <testcase time="0.0109999999999992" classname="modules" name="is_arg_used_returns_false_if_teal_modules_has_no_children_using_given_arg_"/>
    <testcase time="0.00600000000000023" classname="modules" name="is_arg_used_returns_false_if_teal_modules_has_no_children_using_given_arg_"/>
    <testcase time="0.0109999999999992" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00600000000000023" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00600000000000023" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.0100000000000016" classname="modules" name="is_arg_used_returns_TRUE_FALSE_when_the_arg_is_in_function_formals"/>
    <testcase time="0.00599999999999667" classname="modules" name="is_arg_used_returns_TRUE_FALSE_when_the_arg_is_in_function_formals"/>
    <testcase time="0.0120000000000005" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00800000000000267" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.0069999999999979" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.0130000000000017" classname="modules" name="append_module_throws_error_when_modules_is_not_inherited_from_teal_modules"/>
    <testcase time="0.00900000000000034" classname="modules" name="append_module_throws_error_when_modules_is_not_inherited_from_teal_modules"/>
    <testcase time="0.0129999999999981" classname="modules" name="append_module_throws_error_is_module_is_not_inherited_from_teal_module"/>
    <testcase time="0.00799999999999912" classname="modules" name="append_module_throws_error_is_module_is_not_inherited_from_teal_module"/>
    <testcase time="0.0100000000000016" classname="modules" name="append_module_appends_a_module_to_children_of_not_nested_teal_modules"/>
    <testcase time="0.0100000000000016" classname="modules" name="append_module_appends_a_module_to_children_of_nested_teal_modules"/>
    <testcase time="0.00899999999999679" classname="modules" name="append_module_produces_teal_modules_with_unique_named_children"/>
  </testsuite>
  <testsuite name="rcode_utils" timestamp="2023-10-17T08:45:50Z" hostname="d9cce0388342" tests="7" skipped="0" failures="0" errors="0" time="0.145">
    <testcase time="0.0110000000000028" classname="rcode_utils" name="With_no_teal.load_nest_code_option_set_get_rcode_str_install_returns_default_string"/>
    <testcase time="0.00600000000000023" classname="rcode_utils" name="With_teal.load_nest_code_option_set_to_character_get_rcode_str_install_returns_option_value"/>
    <testcase time="0.00300000000000011" classname="rcode_utils" name="With_teal.load_nest_code_option_set_to_character_get_rcode_str_install_returns_option_value"/>
    <testcase time="0.00599999999999667" classname="rcode_utils" name="With_teal.load_nest_code_option_is_not_character_get_rcode_str_install_silently_returns_default_string"/>
    <testcase time="0.00300000000000011" classname="rcode_utils" name="With_teal.load_nest_code_option_is_not_character_get_rcode_str_install_silently_returns_default_string"/>
    <testcase time="0.0550000000000033" classname="rcode_utils" name="get_rcode_libraries_returns_current_session_packages"/>
    <testcase time="0.0609999999999999" classname="rcode_utils" name="get_datasets_code_returns_code_only_for_specified_datanames"/>
  </testsuite>
  <testsuite name="report_previewer_module" timestamp="2023-10-17T08:45:50Z" hostname="d9cce0388342" tests="5" skipped="0" failures="0" errors="0" time="0.04">
    <testcase time="0.0159999999999982" classname="report_previewer_module" name="report_previewer_module_throws_error_if_label_is_not_string"/>
    <testcase time="0.0069999999999979" classname="report_previewer_module" name="report_previewer_module_throws_error_if_label_is_not_string"/>
    <testcase time="0.00800000000000267" classname="report_previewer_module" name="report_previewer_module_throws_no_error_and_stores_label_if_label_is_string"/>
    <testcase time="0.00199999999999889" classname="report_previewer_module" name="report_previewer_module_throws_no_error_and_stores_label_if_label_is_string"/>
    <testcase time="0.0069999999999979" classname="report_previewer_module" name="report_previewer_module_default_label_is_Report_previewer_"/>
  </testsuite>
  <testsuite name="snapshot_manager" timestamp="2023-10-17T08:45:50Z" hostname="d9cce0388342" tests="2" skipped="0" failures="0" errors="0" time="0.125">
    <testcase time="0.0899999999999999" classname="snapshot_manager" name="snapshot_manager_holds_initial_state_in_history"/>
    <testcase time="0.0350000000000001" classname="snapshot_manager" name="snapshot_manager_holds_initial_state_in_history"/>
  </testsuite>
  <testsuite name="tdata" timestamp="2023-10-17T08:45:50Z" hostname="d9cce0388342" tests="33" skipped="0" failures="0" errors="0" time="0.511">
    <testcase time="0.0940000000000012" classname="tdata" name="new_tdata_accepts_reactive_and_not_reactive_MAE_and_data.frames"/>
    <testcase time="0.0120000000000005" classname="tdata" name="new_tdata_throws_error_if_data_is_not_a_list_with_unique_names"/>
    <testcase time="0.00799999999999912" classname="tdata" name="new_tdata_throws_error_if_data_is_not_a_list_with_unique_names"/>
    <testcase time="0.00799999999999912" classname="tdata" name="new_tdata_throws_error_if_data_is_not_a_list_with_unique_names"/>
    <testcase time="0.0120000000000005" classname="tdata" name="new_tdata_throws_error_if_contents_of_data_list_are_not_of_correct_type"/>
    <testcase time="0.0110000000000028" classname="tdata" name="new_tdata_throws_error_if_contents_of_data_list_are_not_of_correct_type"/>
    <testcase time="0.0119999999999969" classname="tdata" name="new_tdata_throws_error_if_code_is_not_character_or_reactive_character"/>
    <testcase time="0.0110000000000028" classname="tdata" name="new_tdata_throws_error_if_code_is_not_character_or_reactive_character"/>
    <testcase time="0.00900000000000034" classname="tdata" name="new_tdata_accepts_character_and_reactive_characters_for_code_argument"/>
    <testcase time="0.00499999999999901" classname="tdata" name="new_tdata_accepts_character_and_reactive_characters_for_code_argument"/>
    <testcase time="0.0120000000000005" classname="tdata" name="new_tdata_throws_error_if_join_keys_is_not_of_class_JoinKeys"/>
    <testcase time="0.00799999999999912" classname="tdata" name="new_tdata_throws_no_error_if_join_keys_is_of_class_JoinKeys"/>
    <testcase time="0.0120000000000005" classname="tdata" name="new_tdata_throws_error_if_metadata_is_not_a_list_with_unique_names_a_subset_of_the_names_of_data"/>
    <testcase time="0.0069999999999979" classname="tdata" name="new_tdata_throws_error_if_metadata_is_not_a_list_with_unique_names_a_subset_of_the_names_of_data"/>
    <testcase time="0.00800000000000267" classname="tdata" name="new_tdata_throws_error_if_metadata_is_not_a_list_with_unique_names_a_subset_of_the_names_of_data"/>
    <testcase time="0.00900000000000034" classname="tdata" name="new_tdata_does_not_throw_error_with_valid_metadata"/>
    <testcase time="0.0119999999999969" classname="tdata" name="get_metadata_returns_NULL_if_no_metadata"/>
    <testcase time="0.0120000000000005" classname="tdata" name="get_metadata_returns_NULL_if_no_metadata_for_given_dataset"/>
    <testcase time="0.00900000000000034" classname="tdata" name="get_metadata_returns_metadata_for_given_dataset"/>
    <testcase time="0.0120000000000005" classname="tdata" name="get_metadata_returns_NULL_if_dataset_doesn_t_exist"/>
    <testcase time="0.0100000000000016" classname="tdata" name="get_code_returns_empty_character_if_tdata_object_has_no_code"/>
    <testcase time="0.0109999999999992" classname="tdata" name="get_code_returns_character_of_code_if_tdata_object_has_code"/>
    <testcase time="0.00499999999999901" classname="tdata" name="get_code_returns_character_of_code_if_tdata_object_has_code"/>
    <testcase time="0.0100000000000016" classname="tdata" name="get_code_tdata_accepts_tdata"/>
    <testcase time="0.0129999999999981" classname="tdata" name="get_code_tdata_throws_error_when_input_is_not_tdata"/>
    <testcase time="0.00900000000000034" classname="tdata" name="get_code_tdata_throws_error_when_input_is_not_tdata"/>
    <testcase time="0.0100000000000016" classname="tdata" name="get_code_tdata_returns_character_code"/>
    <testcase time="0.0790000000000006" classname="tdata" name="tdata2env_returns_environment_containing_tdata_contents_"/>
    <testcase time="0.00300000000000011" classname="tdata" name="tdata2env_returns_environment_containing_tdata_contents_"/>
    <testcase time="0.0420000000000016" classname="tdata" name="tdata2env_returns_environment_containing_tdata_contents_"/>
    <testcase time="0.0129999999999981" classname="tdata" name="tdata2env_throws_error_if_argument_is_not_tdata"/>
    <testcase time="0.0130000000000017" classname="tdata" name="get_join_keys_returns_NULL_if_no_JoinKeys_object_exists_inside_tdata"/>
    <testcase time="0.00999999999999801" classname="tdata" name="get_join_keys_returns_JoinKeys_object_if_it_exists_inside_tdata"/>
  </testsuite>
  <testsuite name="teal_reporter" timestamp="2023-10-17T08:45:50Z" hostname="d9cce0388342" tests="25" skipped="0" failures="0" errors="0" time="0.281">
    <testcase time="0.0169999999999995" classname="teal_reporter" name="TealReportCard_object_can_be_initialized"/>
    <testcase time="0.0100000000000016" classname="teal_reporter" name="TealReportCard_inherits_from_ReportCard"/>
    <testcase time="0.00900000000000034" classname="teal_reporter" name="TealReportCard_new_returns_an_object_of_type_TealReportCard"/>
    <testcase time="0.0180000000000007" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00199999999999889" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00199999999999889" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00200000000000244" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00199999999999889" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00799999999999912" classname="teal_reporter" name="TealReportCard_append_src_accepts_a_character"/>
    <testcase time="0.00700000000000145" classname="teal_reporter" name="TealReportCard_append_src_returns_self"/>
    <testcase time="0.0069999999999979" classname="teal_reporter" name="TealReportCard_append_src_returns_title_and_content"/>
    <testcase time="0.00700000000000145" classname="teal_reporter" name="TealReportCard_append_encodings_accepts_list_of_character"/>
    <testcase time="0.00700000000000145" classname="teal_reporter" name="TealReportCard_append_encodings_returns_self"/>
    <testcase time="0.00799999999999912" classname="teal_reporter" name="TealReportCard_append_encodings_returns_title_and_content"/>
    <testcase time="0.00199999999999889" classname="teal_reporter" name="TealReportCard_append_encodings_returns_title_and_content"/>
    <testcase time="0.054000000000002" classname="teal_reporter" name="TealReportCard_append_fs_accepts_only_a_teal_slices"/>
    <testcase time="0.0119999999999969" classname="teal_reporter" name="TealReportCard_append_fs_accepts_only_a_teal_slices"/>
    <testcase time="0.0130000000000017" classname="teal_reporter" name="TealReportCard_append_fs_returns_self"/>
    <testcase time="0.0130000000000017" classname="teal_reporter" name="TealReportCard_append_fs_returns_title_and_content"/>
    <testcase time="0.00599999999999667" classname="teal_reporter" name="TealReportCard_append_fs_returns_title_and_content"/>
    <testcase time="0.00800000000000267" classname="teal_reporter" name="TealSlicesBlock_new_accepts_teal_slices_only"/>
    <testcase time="0.00799999999999912" classname="teal_reporter" name="TealSlicesBlock_new_accepts_teal_slices_only"/>
    <testcase time="0.0120000000000005" classname="teal_reporter" name="TealSlicesBlock_get_content_returns_yaml_character"/>
    <testcase time="0.0129999999999981" classname="teal_reporter" name="TealSlicesBlock_to_list_returns_list_containing_teal_slices"/>
    <testcase time="0.0340000000000025" classname="teal_reporter" name="TealSlicesBlock_from_list_retains_states_from_a_list"/>
  </testsuite>
  <testsuite name="teal_slices" timestamp="2023-10-17T08:45:51Z" hostname="d9cce0388342" tests="18" skipped="0" failures="0" errors="0" time="0.186">
    <testcase time="0.0120000000000005" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00199999999999889" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00499999999999901" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00199999999999889" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.0110000000000028" classname="teal_slices" name="teal_slices_fails_when_inexisting_teal_slice_id_is_specified_in_mapping"/>
    <testcase time="0.0109999999999992" classname="teal_slices" name="teal_slices_fails_when_inexisting_teal_slice_id_is_specified_in_mapping"/>
    <testcase time="0.0139999999999993" classname="teal_slices" name="teal_slices_processes_filter_mapping"/>
    <testcase time="0.0130000000000017" classname="teal_slices" name="teal_slices_processes_filter_mapping"/>
    <testcase time="0.0209999999999972" classname="teal_slices" name="teal_slices_drops_non_global_filters_if_module_specific_FALSE"/>
    <testcase time="0.0130000000000017" classname="teal_slices" name="teal_slices_drops_non_global_filters_if_module_specific_FALSE"/>
    <testcase time="0.0240000000000009" classname="teal_slices" name="deep_copy_filters_copies_teal_slice_changes_pointer_of_teal_slice_object_but_values_remain_the_same"/>
    <testcase time="0.00600000000000023" classname="teal_slices" name="deep_copy_filters_copies_teal_slice_changes_pointer_of_teal_slice_object_but_values_remain_the_same"/>
    <testcase time="0.0109999999999992" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.0069999999999979" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00600000000000023" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00900000000000034" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.0100000000000016" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00900000000000034" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
  </testsuite>
  <testsuite name="utils" timestamp="2023-10-17T08:45:51Z" hostname="d9cce0388342" tests="10" skipped="0" failures="0" errors="0" time="0.072">
    <testcase time="0.0139999999999993" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0219999999999985" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.00300000000000011" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.00300000000000011" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0180000000000007" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00199999999999889" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00300000000000011" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00300000000000011" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00200000000000244" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00199999999999889" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
  </testsuite>
  <testsuite name="validate_has_data" timestamp="2023-10-17T08:45:51Z" hostname="d9cce0388342" tests="17" skipped="0" failures="0" errors="0" time="0.154">
    <testcase time="0.0120000000000005" classname="validate_has_data" name="validate_has_data_throws_no_error_when_data_has_at_least_as_many_rows_as_min_nrow"/>
    <testcase time="0.00300000000000011" classname="validate_has_data" name="validate_has_data_throws_no_error_when_data_has_at_least_as_many_rows_as_min_nrow"/>
    <testcase time="0.0109999999999992" classname="validate_has_data" name="validate_has_data_throws_error_when_min_nrow_rows_of_data"/>
    <testcase time="0.0069999999999979" classname="validate_has_data" name="validate_has_data_accepts_logical_complete_argument"/>
    <testcase time="0.00300000000000011" classname="validate_has_data" name="validate_has_data_accepts_logical_complete_argument"/>
    <testcase time="0.0120000000000005" classname="validate_has_data" name="validate_has_data_throws_error_when_data_has_NA_and_complete_is_set_to_TRUE"/>
    <testcase time="0.00799999999999912" classname="validate_has_data" name="validate_has_data_accepts_logical_allow_inf_argument"/>
    <testcase time="0.00800000000000267" classname="validate_has_data" name="validate_has_data_accepts_logical_allow_inf_argument"/>
    <testcase time="0.0119999999999969" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.0120000000000005" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00700000000000145" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00799999999999912" classname="validate_has_data" name="validate_has_data_allow_inf_argument_ignores_non_numeric_columns"/>
    <testcase time="0.0069999999999979" classname="validate_has_data" name="validate_has_data_allow_inf_argument_ignores_non_numeric_columns"/>
    <testcase time="0.0120000000000005" classname="validate_has_data" name="validate_has_data_returns_message_when_msg_argument_is_set"/>
    <testcase time="0.0130000000000017" classname="validate_has_data" name="validate_has_data_returns_message_msg_argument_is_set_and_complete_is_set_to_TRUE"/>
    <testcase time="0.0120000000000005" classname="validate_has_data" name="validate_has_data_returns_throws_error_with_non_character_msg_input"/>
    <testcase time="0.0069999999999979" classname="validate_has_data" name="validate_has_data_returns_throws_error_with_non_character_msg_input"/>
  </testsuite>
  <testsuite name="validate_inputs" timestamp="2023-10-17T08:45:51Z" hostname="d9cce0388342" tests="36" skipped="0" failures="0" errors="0" time="1.438">
    <testcase time="0.0180000000000007" classname="validate_inputs" name="invalid_arguments_raise_errors"/>
    <testcase time="0.00799999999999912" classname="validate_inputs" name="invalid_arguments_raise_errors"/>
    <testcase time="0.0380000000000003" classname="validate_inputs" name="disabled_validators_raise_warnings_individual_validators_"/>
    <testcase time="0.0300000000000011" classname="validate_inputs" name="disabled_validators_raise_warnings_validator_list_"/>
    <testcase time="0.0309999999999988" classname="validate_inputs" name="disabled_validators_raise_warnings_nested_validator_list_"/>
    <testcase time="0.118000000000002" classname="validate_inputs" name="valid_inputs_produce_desired_output_individual_validators_"/>
    <testcase time="0.0359999999999978" classname="validate_inputs" name="valid_inputs_produce_desired_output_validator_list_"/>
    <testcase time="0.0310000000000024" classname="validate_inputs" name="valid_inputs_produce_desired_output_nested_validator_list_"/>
    <testcase time="0.036999999999999" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0339999999999989" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0339999999999989" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0390000000000015" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0330000000000013" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.672000000000001" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0379999999999967" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.032" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0330000000000013" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0420000000000016" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0120000000000005" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00999999999999801" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0109999999999992" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0100000000000016" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00399999999999778" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00400000000000134" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00400000000000134" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00399999999999778" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00400000000000134" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00399999999999778" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0400000000000027" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
    <testcase time="0.00600000000000023" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
    <testcase time="0.00600000000000023" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
  </testsuite>
</testsuites>
