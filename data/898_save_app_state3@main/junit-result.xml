<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="filter_manager" timestamp="2024-03-15T19:03:02Z" hostname="7a06ccc70624" tests="1" skipped="0" failures="0" errors="1" time="0.14">
    <testcase time="0.14" classname="filter_manager" name="filter_manager_srv_initializes_properly_processes_input_arguments">
      <error type="error" message="Error in `(function (id, datasets, filter)  ('test-filter_manager.R:40:3')">Error in `(function (id, datasets, filter) 
{
    moduleServer(id, function(input, output, session) {
        logger::log_trace("filter_manager_srv initializing for: { paste(names(datasets), collapse = ', ')}.")
        is_module_specific &lt;- isTRUE(attr(filter, "module_specific"))
        slices_global &lt;- reactiveVal(filter)
        datasets_flat &lt;- if (!is_module_specific) {
            flatten_datasets(unlist(datasets)[[1]])
        }
        else {
            flatten_datasets(datasets)
        }
        mapping_matrix &lt;- reactive({
            state_ids_global &lt;- vapply(slices_global(), `[[`, 
                character(1L), "id")
            mapping_smooth &lt;- lapply(datasets_flat, function(x) {
                state_ids_local &lt;- vapply(x$get_filter_state(), 
                  `[[`, character(1L), "id")
                state_ids_allowed &lt;- vapply((x$get_available_teal_slices())(), 
                  `[[`, character(1L), "id")
                states_active &lt;- state_ids_global %in% state_ids_local
                ifelse(state_ids_global %in% state_ids_allowed, 
                  states_active, NA)
            })
            as.data.frame(mapping_smooth, row.names = state_ids_global, 
                check.names = FALSE)
        })
        output$slices_table &lt;- renderTable(expr = {
            mm &lt;- mapping_matrix()
            mm[] &lt;- lapply(mm, ifelse, yes = intToUtf8(9989), 
                no = intToUtf8(10060))
            mm[] &lt;- lapply(mm, function(x) ifelse(is.na(x), intToUtf8(128306), 
                x))
            if (nrow(mm) == 0L) {
                mm &lt;- data.frame(`Filter manager` = "No filters specified.", 
                  check.names = FALSE)
                rownames(mm) &lt;- ""
            }
            mm[names(mm) != "Report previewer"]
        }, align = paste(c("l", rep("c", sum(names(datasets_flat) != 
            "Report previewer"))), collapse = ""), rownames = TRUE)
        modules_out &lt;- lapply(names(datasets_flat), function(module_name) {
            filter_manager_module_srv(id = module_name, module_fd = datasets_flat[[module_name]], 
                slices_global = slices_global)
        })
        list(slices_global = slices_global, mapping_matrix = mapping_matrix, 
            datasets_flat = datasets_flat, modules_out = modules_out)
    })
})(id = "test", filtered_data_list = list(m1 = &lt;environment&gt;, 
    tab = list(m2 = &lt;environment&gt;, m3 = &lt;environment&gt;)), filter = structure(list(
    structure(list(impl = &lt;environment&gt;, readonly = FALSE, ns = function (x) 
    x), class = c("teal_slice_var", "teal_slice", "reactivevalues"
    )), structure(list(impl = &lt;environment&gt;, readonly = FALSE, 
        ns = function (x) 
        x), class = c("teal_slice_var", "teal_slice", "reactivevalues"
    )), structure(list(impl = &lt;environment&gt;, readonly = FALSE, 
        ns = function (x) 
        x), class = c("teal_slice_var", "teal_slice", "reactivevalues"
    )), structure(list(impl = &lt;environment&gt;, readonly = FALSE, 
        ns = function (x) 
        x), class = c("teal_slice_var", "teal_slice", "reactivevalues"
    ))), allow_add = TRUE, class = c("modules_teal_slices", "teal_slices", 
"list"), mapping = list(m1 = "iris Sepal.Length", m3 = "women height", 
    global_filters = "iris Species"), module_specific = TRUE))`: unused argument (filtered_data_list = list(&lt;environment&gt;, list(&lt;environment&gt;, &lt;environment&gt;)))
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-filter_manager.R:40:3
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   └─rlang::exec(app, !!!args)</error>
    </testcase>
  </testsuite>
  <testsuite name="init" timestamp="2024-03-15T19:03:02Z" hostname="7a06ccc70624" tests="10" skipped="0" failures="0" errors="0" time="0.345">
    <testcase time="0.102" classname="init" name="init_data_accepts_teal_data_object"/>
    <testcase time="0.03" classname="init" name="init_data_accepts_teal_data_module"/>
    <testcase time="0.0279999999999999" classname="init" name="init_modules_accepts_a_teal_modules_object"/>
    <testcase time="0.028" classname="init" name="init_modules_accepts_a_list_of_teal_module_elements"/>
    <testcase time="0.0250000000000001" classname="init" name="init_modules_accepts_a_teal_module_object"/>
    <testcase time="0.0319999999999998" classname="init" name="init_filter_accepts_teal_slices_"/>
    <testcase time="0.00800000000000001" classname="init" name="init_filter_accepts_teal_slices_"/>
    <testcase time="0.0290000000000001" classname="init" name="init_throws_when_an_empty_data_is_used"/>
    <testcase time="0.034" classname="init" name="init_throws_when_datanames_in_modules_incompatible_w_datanames_in_data"/>
    <testcase time="0.0289999999999999" classname="init" name="init_throws_when_dataname_in_filter_incompatible_w_datanames_in_data"/>
  </testsuite>
  <testsuite name="module_nested_tabs" timestamp="2024-03-15T19:03:03Z" hostname="7a06ccc70624" tests="4" skipped="0" failures="0" errors="3" time="0.46">
    <testcase time="0.0609999999999999" classname="module_nested_tabs" name="srv_nested_tabs_throws_error_if_reporter_is_not_inherited_from_class_Reporter"/>
    <testcase time="0.168" classname="module_nested_tabs" name="passed_shiny_module_is_initialized_only_when_the_UI_is_triggered">
      <error type="error" message="Error in `if (session$restoreContext$active) { ('test-module_nested_tabs.R:59:3')">Error in `if (session$restoreContext$active) {
    call_module()
} else {
    observeEvent(ignoreNULL = TRUE, once = TRUE, eventExpr = trigger_module(), 
        handlerExpr = call_module())
}`: argument is of length zero
Backtrace:
     ▆
  1. ├─testthat::expect_silent(...) at test-module_nested_tabs.R:59:3
  2. │ └─testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ ├─withr::with_output_sink(...)
  5. │   │ │ └─base::force(code)
  6. │   │ ├─base::withCallingHandlers(...)
  7. │   │ └─base::withVisible(code)
  8. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. └─shiny::testServer(...)
 10.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
 11.   │ ├─shiny::isolate(...)
 12.   │ │ ├─shiny::..stacktraceoff..(...)
 13.   │ │ └─ctx$run(...)
 14.   │ │   ├─promises::with_promise_domain(...)
 15.   │ │   │ └─domain$wrapSync(expr)
 16.   │ │   ├─shiny::withReactiveDomain(...)
 17.   │ │   │ └─promises::with_promise_domain(...)
 18.   │ │   │   └─domain$wrapSync(expr)
 19.   │ │   │     └─base::force(expr)
 20.   │ │   └─env$runWith(self, func)
 21.   │ │     └─shiny (local) contextFunc()
 22.   │ │       └─shiny::..stacktraceon..(expr)
 23.   │ ├─shiny::withReactiveDomain(...)
 24.   │ │ └─promises::with_promise_domain(...)
 25.   │ │   └─domain$wrapSync(expr)
 26.   │ │     └─base::force(expr)
 27.   │ └─withr::with_options(...)
 28.   │   └─base::force(code)
 29.   ├─rlang::exec(app, !!!args)
 30.   ├─teal (local) `&lt;fn&gt;`(...)
 31.   └─teal:::srv_nested_tabs.teal_modules(...)
 32.     └─shiny::moduleServer(...)
 33.       ├─session$setReturned(callModule(module, id, session = session))
 34.       └─shiny::callModule(module, id, session = session)
 35.         ├─shiny::withReactiveDomain(...)
 36.         │ └─promises::with_promise_domain(...)
 37.         │   └─domain$wrapSync(expr)
 38.         │     └─base::force(expr)
 39.         └─teal::module(...)
 40.           └─base::sapply(...)
 41.             └─base::lapply(X = X, FUN = FUN, ...)
 42.               └─teal (local) FUN(X[[i]], ...)
 43.                 ├─teal:::srv_nested_tabs(...)
 44.                 └─teal:::srv_nested_tabs.teal_module(...)
 45.                   └─shiny::moduleServer(...)
 46.                     └─shiny::callModule(module, id, session = session)
 47.                       ├─shiny::withReactiveDomain(...)
 48.                       │ └─promises::with_promise_domain(...)
 49.                       │   └─domain$wrapSync(expr)
 50.                       │     └─base::force(expr)
 51.                       └─teal::module(...)</error>
    </testcase>
    <testcase time="0.148" classname="module_nested_tabs" name="nested_teal_modules_are_initialized_when_the_UI_is_triggered">
      <error type="error" message="Error in `if (session$restoreContext$active) { ('test-module_nested_tabs.R:92:3')">Error in `if (session$restoreContext$active) {
    call_module()
} else {
    observeEvent(ignoreNULL = TRUE, once = TRUE, eventExpr = trigger_module(), 
        handlerExpr = call_module())
}`: argument is of length zero
Backtrace:
     ▆
  1. ├─testthat::expect_silent(...) at test-module_nested_tabs.R:92:3
  2. │ └─testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ ├─withr::with_output_sink(...)
  5. │   │ │ └─base::force(code)
  6. │   │ ├─base::withCallingHandlers(...)
  7. │   │ └─base::withVisible(code)
  8. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. └─shiny::testServer(...)
 10.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
 11.   │ ├─shiny::isolate(...)
 12.   │ │ ├─shiny::..stacktraceoff..(...)
 13.   │ │ └─ctx$run(...)
 14.   │ │   ├─promises::with_promise_domain(...)
 15.   │ │   │ └─domain$wrapSync(expr)
 16.   │ │   ├─shiny::withReactiveDomain(...)
 17.   │ │   │ └─promises::with_promise_domain(...)
 18.   │ │   │   └─domain$wrapSync(expr)
 19.   │ │   │     └─base::force(expr)
 20.   │ │   └─env$runWith(self, func)
 21.   │ │     └─shiny (local) contextFunc()
 22.   │ │       └─shiny::..stacktraceon..(expr)
 23.   │ ├─shiny::withReactiveDomain(...)
 24.   │ │ └─promises::with_promise_domain(...)
 25.   │ │   └─domain$wrapSync(expr)
 26.   │ │     └─base::force(expr)
 27.   │ └─withr::with_options(...)
 28.   │   └─base::force(code)
 29.   ├─rlang::exec(app, !!!args)
 30.   ├─teal (local) `&lt;fn&gt;`(...)
 31.   └─teal:::srv_nested_tabs.teal_modules(...)
 32.     └─shiny::moduleServer(...)
 33.       ├─session$setReturned(callModule(module, id, session = session))
 34.       └─shiny::callModule(module, id, session = session)
 35.         ├─shiny::withReactiveDomain(...)
 36.         │ └─promises::with_promise_domain(...)
 37.         │   └─domain$wrapSync(expr)
 38.         │     └─base::force(expr)
 39.         └─teal::module(...)
 40.           └─base::sapply(...)
 41.             └─base::lapply(X = X, FUN = FUN, ...)
 42.               └─teal (local) FUN(X[[i]], ...)
 43.                 ├─teal:::srv_nested_tabs(...)
 44.                 └─teal:::srv_nested_tabs.teal_modules(...)
 45.                   └─shiny::moduleServer(...)
 46.                     └─shiny::callModule(module, id, session = session)
 47.                       ├─shiny::withReactiveDomain(...)
 48.                       │ └─promises::with_promise_domain(...)
 49.                       │   └─domain$wrapSync(expr)
 50.                       │     └─base::force(expr)
 51.                       └─teal::module(...)
 52.                         └─base::sapply(...)
 53.                           └─base::lapply(X = X, FUN = FUN, ...)
 54.                             └─teal (local) FUN(X[[i]], ...)
 55.                               ├─teal:::srv_nested_tabs(...)
 56.                               └─teal:::srv_nested_tabs.teal_module(...)
 57.                                 └─shiny::moduleServer(...)
 58.                                   └─shiny::callModule(module, id, session = session)
 59.                                     ├─shiny::withReactiveDomain(...)
 60.                                     │ └─promises::with_promise_domain(...)
 61.                                     │   └─domain$wrapSync(expr)
 62.                                     │     └─base::force(expr)
 63.                                     └─teal::module(...)</error>
    </testcase>
    <testcase time="0.083" classname="module_nested_tabs" name="_unnamed_">
      <error type="error" message="Error in `if (session$restoreContext$active) { ('test-module_nested_tabs.R:135:1')">Error in `if (session$restoreContext$active) {
    call_module()
} else {
    observeEvent(ignoreNULL = TRUE, once = TRUE, eventExpr = trigger_module(), 
        handlerExpr = call_module())
}`: argument is of length zero
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-module_nested_tabs.R:135:1
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   ├─rlang::exec(app, !!!args)
 22.   ├─teal (local) `&lt;fn&gt;`(...)
 23.   └─teal:::srv_nested_tabs.teal_modules(...)
 24.     └─shiny::moduleServer(...)
 25.       ├─session$setReturned(callModule(module, id, session = session))
 26.       └─shiny::callModule(module, id, session = session)
 27.         ├─shiny::withReactiveDomain(...)
 28.         │ └─promises::with_promise_domain(...)
 29.         │   └─domain$wrapSync(expr)
 30.         │     └─base::force(expr)
 31.         └─teal::module(...)
 32.           └─base::sapply(...)
 33.             └─base::lapply(X = X, FUN = FUN, ...)
 34.               └─teal (local) FUN(X[[i]], ...)
 35.                 ├─teal:::srv_nested_tabs(...)
 36.                 └─teal:::srv_nested_tabs.teal_modules(...)
 37.                   └─shiny::moduleServer(...)
 38.                     └─shiny::callModule(module, id, session = session)
 39.                       ├─shiny::withReactiveDomain(...)
 40.                       │ └─promises::with_promise_domain(...)
 41.                       │   └─domain$wrapSync(expr)
 42.                       │     └─base::force(expr)
 43.                       └─teal::module(...)
 44.                         └─base::sapply(...)
 45.                           └─base::lapply(X = X, FUN = FUN, ...)
 46.                             └─teal (local) FUN(X[[i]], ...)
 47.                               ├─teal:::srv_nested_tabs(...)
 48.                               └─teal:::srv_nested_tabs.teal_module(...)
 49.                                 └─shiny::moduleServer(...)
 50.                                   └─shiny::callModule(module, id, session = session)
 51.                                     ├─shiny::withReactiveDomain(...)
 52.                                     │ └─promises::with_promise_domain(...)
 53.                                     │   └─domain$wrapSync(expr)
 54.                                     │     └─base::force(expr)
 55.                                     └─teal::module(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="module_tabs_with_filters" timestamp="2024-03-15T19:03:03Z" hostname="7a06ccc70624" tests="5" skipped="0" failures="0" errors="3" time="0.348">
    <testcase time="0.0680000000000001" classname="module_tabs_with_filters" name="srv_tabs_with_filters_throws_error_if_reporter_is_not_of_class_Reporter"/>
    <testcase time="0.087" classname="module_tabs_with_filters" name="active_module_returns_module_specs_from_active_tab_when_filter.module_specific_FALSE">
      <error type="error" message="Error in `if (session$restoreContext$active) { ('test-module_tabs_with_filters.R:37:3')">Error in `if (session$restoreContext$active) {
    call_module()
} else {
    observeEvent(ignoreNULL = TRUE, once = TRUE, eventExpr = trigger_module(), 
        handlerExpr = call_module())
}`: argument is of length zero
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-module_tabs_with_filters.R:37:3
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   ├─rlang::exec(app, !!!args)
 22.   └─teal (local) `&lt;fn&gt;`(...)
 23.     └─shiny::moduleServer(...)
 24.       ├─session$setReturned(callModule(module, id, session = session))
 25.       └─shiny::callModule(module, id, session = session)
 26.         ├─shiny::withReactiveDomain(...)
 27.         │ └─promises::with_promise_domain(...)
 28.         │   └─domain$wrapSync(expr)
 29.         │     └─base::force(expr)
 30.         └─teal::module(...)
 31.           ├─teal:::srv_nested_tabs(...)
 32.           └─teal:::srv_nested_tabs.teal_modules(...)
 33.             └─shiny::moduleServer(...)
 34.               └─shiny::callModule(module, id, session = session)
 35.                 ├─shiny::withReactiveDomain(...)
 36.                 │ └─promises::with_promise_domain(...)
 37.                 │   └─domain$wrapSync(expr)
 38.                 │     └─base::force(expr)
 39.                 └─teal::module(...)
 40.                   └─base::sapply(...)
 41.                     └─base::lapply(X = X, FUN = FUN, ...)
 42.                       └─teal (local) FUN(X[[i]], ...)
 43.                         ├─teal:::srv_nested_tabs(...)
 44.                         └─teal:::srv_nested_tabs.teal_module(...)
 45.                           └─shiny::moduleServer(...)
 46.                             └─shiny::callModule(module, id, session = session)
 47.                               ├─shiny::withReactiveDomain(...)
 48.                               │ └─promises::with_promise_domain(...)
 49.                               │   └─domain$wrapSync(expr)
 50.                               │     └─base::force(expr)
 51.                               └─teal::module(...)</error>
    </testcase>
    <testcase time="0.038" classname="module_tabs_with_filters" name="srv_tabs_with_filters_throws_error_if_reporter_is_not_of_class_Reporter"/>
    <testcase time="0.0640000000000001" classname="module_tabs_with_filters" name="active_datanames_returns_dataname_from_single_tab">
      <error type="error" message="Error in `if (session$restoreContext$active) { ('test-module_tabs_with_filters.R:68:3')">Error in `if (session$restoreContext$active) {
    call_module()
} else {
    observeEvent(ignoreNULL = TRUE, once = TRUE, eventExpr = trigger_module(), 
        handlerExpr = call_module())
}`: argument is of length zero
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-module_tabs_with_filters.R:68:3
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   ├─rlang::exec(app, !!!args)
 22.   └─teal (local) `&lt;fn&gt;`(...)
 23.     └─shiny::moduleServer(...)
 24.       ├─session$setReturned(callModule(module, id, session = session))
 25.       └─shiny::callModule(module, id, session = session)
 26.         ├─shiny::withReactiveDomain(...)
 27.         │ └─promises::with_promise_domain(...)
 28.         │   └─domain$wrapSync(expr)
 29.         │     └─base::force(expr)
 30.         └─teal::module(...)
 31.           ├─teal:::srv_nested_tabs(...)
 32.           └─teal:::srv_nested_tabs.teal_modules(...)
 33.             └─shiny::moduleServer(...)
 34.               └─shiny::callModule(module, id, session = session)
 35.                 ├─shiny::withReactiveDomain(...)
 36.                 │ └─promises::with_promise_domain(...)
 37.                 │   └─domain$wrapSync(expr)
 38.                 │     └─base::force(expr)
 39.                 └─teal::module(...)
 40.                   └─base::sapply(...)
 41.                     └─base::lapply(X = X, FUN = FUN, ...)
 42.                       └─teal (local) FUN(X[[i]], ...)
 43.                         ├─teal:::srv_nested_tabs(...)
 44.                         └─teal:::srv_nested_tabs.teal_module(...)
 45.                           └─shiny::moduleServer(...)
 46.                             └─shiny::callModule(module, id, session = session)
 47.                               ├─shiny::withReactiveDomain(...)
 48.                               │ └─promises::with_promise_domain(...)
 49.                               │   └─domain$wrapSync(expr)
 50.                               │     └─base::force(expr)
 51.                               └─teal::module(...)</error>
    </testcase>
    <testcase time="0.091" classname="module_tabs_with_filters" name="active_datanames_returns_dataname_from_active_tab_after_change">
      <error type="error" message="Error in `if (session$restoreContext$active) { ('test-module_tabs_with_filters.R:83:3')">Error in `if (session$restoreContext$active) {
    call_module()
} else {
    observeEvent(ignoreNULL = TRUE, once = TRUE, eventExpr = trigger_module(), 
        handlerExpr = call_module())
}`: argument is of length zero
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-module_tabs_with_filters.R:83:3
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   ├─rlang::exec(app, !!!args)
 22.   └─teal (local) `&lt;fn&gt;`(...)
 23.     └─shiny::moduleServer(...)
 24.       ├─session$setReturned(callModule(module, id, session = session))
 25.       └─shiny::callModule(module, id, session = session)
 26.         ├─shiny::withReactiveDomain(...)
 27.         │ └─promises::with_promise_domain(...)
 28.         │   └─domain$wrapSync(expr)
 29.         │     └─base::force(expr)
 30.         └─teal::module(...)
 31.           ├─teal:::srv_nested_tabs(...)
 32.           └─teal:::srv_nested_tabs.teal_modules(...)
 33.             └─shiny::moduleServer(...)
 34.               └─shiny::callModule(module, id, session = session)
 35.                 ├─shiny::withReactiveDomain(...)
 36.                 │ └─promises::with_promise_domain(...)
 37.                 │   └─domain$wrapSync(expr)
 38.                 │     └─base::force(expr)
 39.                 └─teal::module(...)
 40.                   └─base::sapply(...)
 41.                     └─base::lapply(X = X, FUN = FUN, ...)
 42.                       └─teal (local) FUN(X[[i]], ...)
 43.                         ├─teal:::srv_nested_tabs(...)
 44.                         └─teal:::srv_nested_tabs.teal_module(...)
 45.                           └─shiny::moduleServer(...)
 46.                             └─shiny::callModule(module, id, session = session)
 47.                               ├─shiny::withReactiveDomain(...)
 48.                               │ └─promises::with_promise_domain(...)
 49.                               │   └─domain$wrapSync(expr)
 50.                               │     └─base::force(expr)
 51.                               └─teal::module(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="module_teal" timestamp="2024-03-15T19:03:04Z" hostname="7a06ccc70624" tests="8" skipped="0" failures="0" errors="0" time="0.228">
    <testcase time="0.0660000000000003" classname="module_teal" name="srv_teal_fails_when_teal_data_rv_is_not_reactive"/>
    <testcase time="0.0359999999999996" classname="module_teal" name="srv_teal_when_teal_data_rv_changes_datasets_reactive_is_initialized_as_list_of_FilteredData"/>
    <testcase time="0.0300000000000002" classname="module_teal" name="srv_teal_initialized_datasets_reactive_list_reflects_modules_structure"/>
    <testcase time="0.00099999999999989" classname="module_teal" name="srv_teal_initialized_datasets_reactive_list_reflects_modules_structure"/>
    <testcase time="0.0300000000000002" classname="module_teal" name="srv_teal_initialized_data_containing_same_FilteredData_when_the_filter_is_global"/>
    <testcase time="0.00199999999999978" classname="module_teal" name="srv_teal_initialized_data_containing_same_FilteredData_when_the_filter_is_global"/>
    <testcase time="0.0609999999999999" classname="module_teal" name="srv_teal_initialized_data_containing_different_FilteredData_when_the_filter_is_module_specific"/>
    <testcase time="0.00200000000000022" classname="module_teal" name="srv_teal_initialized_data_containing_different_FilteredData_when_the_filter_is_module_specific"/>
  </testsuite>
  <testsuite name="module_teal_with_splash" timestamp="2024-03-15T19:03:04Z" hostname="7a06ccc70624" tests="41" skipped="0" failures="0" errors="0" time="0.448">
    <testcase time="0.0229999999999997" classname="module_teal_with_splash" name="srv_teal_with_splash_data_accepts_a_teal_data_module"/>
    <testcase time="0.0169999999999999" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_when_teal_data_module_doesn_t_return_reactive"/>
    <testcase time="0.0219999999999998" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_evaluates_the_server_of_teal_data_module"/>
    <testcase time="0.00200000000000022" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_evaluates_the_server_of_teal_data_module"/>
    <testcase time="0.0219999999999998" classname="module_teal_with_splash" name="srv_teal_with_splash_passes_teal_data_to_reactive"/>
    <testcase time="0.00300000000000011" classname="module_teal_with_splash" name="srv_teal_with_splash_passes_teal_data_to_reactive"/>
    <testcase time="0.0230000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_passes_when_datanames_are_empty_with_warning"/>
    <testcase time="0.00199999999999978" classname="module_teal_with_splash" name="srv_teal_with_splash_passes_when_datanames_are_empty_with_warning"/>
    <testcase time="0.00300000000000011" classname="module_teal_with_splash" name="srv_teal_with_splash_passes_when_datanames_are_empty_with_warning"/>
    <testcase time="0.02" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_when_teal_data_module_returns_error"/>
    <testcase time="0.00800000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_when_teal_data_module_returns_error"/>
    <testcase time="0.0220000000000002" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_then_qenv.error_occurs"/>
    <testcase time="0.0149999999999997" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_then_qenv.error_occurs"/>
    <testcase time="0.0210000000000004" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_when_teal_data_module_doesn_t_return_teal_data"/>
    <testcase time="0.00800000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_when_teal_data_module_doesn_t_return_teal_data"/>
    <testcase time="0.0229999999999997" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_when_incompatible_module_s_datanames"/>
    <testcase time="0.00800000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_throws_when_incompatible_module_s_datanames"/>
    <testcase time="0.0220000000000002" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_returns_teal_data_if_incompatible_filter_s_datanames"/>
    <testcase time="0.00699999999999967" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_returns_teal_data_if_incompatible_filter_s_datanames"/>
    <testcase time="0.00100000000000033" classname="module_teal_with_splash" name="srv_teal_with_splash_teal_data_rv_validate_returns_teal_data_if_incompatible_filter_s_datanames"/>
    <testcase time="0.0209999999999999" classname="module_teal_with_splash" name="srv_teal_with_splash_gets_observe_event_from_srv_teal"/>
    <testcase time="0.0219999999999998" classname="module_teal_with_splash" name="srv_teal_with_splash_accepts_data_after_within.teal_data_module"/>
    <testcase time="0.00900000000000034" classname="module_teal_with_splash" name="srv_teal_with_splash_accepts_data_after_within.teal_data_module"/>
    <testcase time="0.00499999999999989" classname="module_teal_with_splash" name="srv_teal_with_splash_accepts_data_after_within.teal_data_module"/>
    <testcase time="0.00199999999999978" classname="module_teal_with_splash" name="srv_teal_with_splash_accepts_data_after_within.teal_data_module"/>
    <testcase time="0.00200000000000022" classname="module_teal_with_splash" name="srv_teal_with_splash_accepts_data_after_within.teal_data_module"/>
    <testcase time="0.0270000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_qenv.error"/>
    <testcase time="0.004" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_qenv.error"/>
    <testcase time="0.00199999999999978" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_qenv.error"/>
    <testcase time="0.00800000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_qenv.error"/>
    <testcase time="0.00199999999999978" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_qenv.error"/>
    <testcase time="0.02" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_NULL"/>
    <testcase time="0.004" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_NULL"/>
    <testcase time="0.00200000000000022" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_NULL"/>
    <testcase time="0.00800000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_NULL"/>
    <testcase time="0.00199999999999978" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_NULL"/>
    <testcase time="0.02" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.00500000000000034" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.00099999999999989" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.00800000000000001" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.00199999999999978" classname="module_teal_with_splash" name="srv_teal_with_splash_throws_error_when_within.teal_data_module_returns_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
  </testsuite>
  <testsuite name="modules" timestamp="2024-03-15T19:03:04Z" hostname="7a06ccc70624" tests="95" skipped="0" failures="0" errors="0" time="0.358">
    <testcase time="0.00700000000000012" classname="modules" name="Calling_module_does_not_throw"/>
    <testcase time="0.004" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.004" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.004" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00499999999999989" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.004" classname="modules" name="module_requires_label_argument_to_be_a_string_different_than_global_filters_"/>
    <testcase time="0.00300000000000011" classname="modules" name="module_warns_when_server_contains_datasets_argument"/>
    <testcase time="0.004" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00100000000000033" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00499999999999989" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.004" classname="modules" name="module_expects_server_being_a_shiny_server_module_with_any_argument"/>
    <testcase time="0.00300000000000011" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00199999999999978" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.0089999999999999" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00500000000000034" classname="modules" name="module_requires_server_args_argument_to_be_a_list"/>
    <testcase time="0.00299999999999967" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.00200000000000022" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.004" classname="modules" name="module_expects_all_server_args_being_a_server_arguments_or_passed_through_..._"/>
    <testcase time="0.004" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00199999999999978" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00100000000000033" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00499999999999989" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.004" classname="modules" name="module_requires_ui_args_argument_to_be_a_list"/>
    <testcase time="0.00700000000000012" classname="modules" name="module_throws_when_ui_has_data_or_datasets_argument"/>
    <testcase time="0.004" classname="modules" name="module_throws_when_ui_has_data_or_datasets_argument"/>
    <testcase time="0.00299999999999967" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00200000000000022" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.004" classname="modules" name="module_expects_ui_being_a_shiny_ui_module_with_any_argument"/>
    <testcase time="0.00300000000000011" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.00199999999999978" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.004" classname="modules" name="module_expects_all_ui_args_being_a_ui_arguments_or_passed_through_..._"/>
    <testcase time="0.004" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00100000000000033" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00499999999999989" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_requires_datanames_argument_to_be_a_character_or_NULL"/>
    <testcase time="0.00300000000000011" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00199999999999978" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00100000000000033" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00200000000000022" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00099999999999989" classname="modules" name="module_returns_list_of_class_teal_module_containing_input_objects"/>
    <testcase time="0.00700000000000012" classname="modules" name="modules_gives_error_if_no_arguments_other_than_label_are_used"/>
    <testcase time="0.004" classname="modules" name="modules_gives_error_if_no_arguments_other_than_label_are_used"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00499999999999989" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.004" classname="modules" name="modules_requires_label_argument_to_be_a_string_"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_accept_teal_module_in_..."/>
    <testcase time="0.004" classname="modules" name="modules_accept_multiple_teal_module_objects_in_..."/>
    <testcase time="0.00299999999999967" classname="modules" name="modules_accept_multiple_teal_module_and_teal_modules_objects_in_..."/>
    <testcase time="0.00700000000000012" classname="modules" name="modules_does_not_accept_objects_other_than_teal_module_s_in_..."/>
    <testcase time="0.0089999999999999" classname="modules" name="modules_does_not_accept_objects_other_than_teal_module_s_in_..."/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_teal_modules_object_with_label_and_children_slot"/>
    <testcase time="0.00199999999999978" classname="modules" name="modules_returns_teal_modules_object_with_label_and_children_slot"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00099999999999989" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00100000000000033" classname="modules" name="modules_returns_children_as_list_with_list_named_after_label_attributes"/>
    <testcase time="0.00699999999999967" classname="modules" name="modules_returns_useful_error_message_if_label_argument_not_explicitly_named"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00099999999999989" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00200000000000022" classname="modules" name="modules_returns_children_as_list_with_unique_names_if_labels_are_duplicated"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_depth_accepts_depth_as_integer"/>
    <testcase time="0.00499999999999989" classname="modules" name="modules_depth_accepts_depth_as_integer"/>
    <testcase time="0.004" classname="modules" name="modules_depth_returns_depth_0_by_default"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_depth_accepts_modules_to_be_teal_module_or_teal_modules"/>
    <testcase time="0.00199999999999978" classname="modules" name="modules_depth_accepts_modules_to_be_teal_module_or_teal_modules"/>
    <testcase time="0.00300000000000011" classname="modules" name="modules_depth_returns_depth_same_as_input_for_teal_module"/>
    <testcase time="0.004" classname="modules" name="modules_depth_increases_depth_by_1_for_each_teal_modules"/>
    <testcase time="0.00199999999999978" classname="modules" name="modules_depth_increases_depth_by_1_for_each_teal_modules"/>
    <testcase time="0.00600000000000023" classname="modules" name="is_arg_used_throws_error_if_object_is_not_teal_module_or_teal_modules"/>
    <testcase time="0.00499999999999989" classname="modules" name="is_arg_used_throws_error_if_object_is_not_teal_module_or_teal_modules"/>
    <testcase time="0.00499999999999989" classname="modules" name="is_arg_used_returns_true_if_teal_module_has_given_arg_in_server_function_args"/>
    <testcase time="0.00500000000000034" classname="modules" name="is_arg_used_returns_false_if_teal_module_does_not_have_reporter_in_server_function_args"/>
    <testcase time="0.00599999999999978" classname="modules" name="is_arg_used_returns_false_if_teal_modules_has_no_children_using_given_arg_"/>
    <testcase time="0.00300000000000011" classname="modules" name="is_arg_used_returns_false_if_teal_modules_has_no_children_using_given_arg_"/>
    <testcase time="0.00499999999999989" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00300000000000011" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00300000000000011" classname="modules" name="is_arg_used_returns_true_if_teal_modules_has_at_least_one_child_using_given_arg_"/>
    <testcase time="0.00499999999999989" classname="modules" name="is_arg_used_returns_TRUE_FALSE_when_the_arg_is_in_function_formals"/>
    <testcase time="0.00300000000000011" classname="modules" name="is_arg_used_returns_TRUE_FALSE_when_the_arg_is_in_function_formals"/>
    <testcase time="0.00699999999999967" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00500000000000034" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00499999999999989" classname="modules" name="is_arg_used_accepts_arg_to_be_a_string_only"/>
    <testcase time="0.00699999999999967" classname="modules" name="append_module_throws_error_when_modules_is_not_inherited_from_teal_modules"/>
    <testcase time="0.00500000000000034" classname="modules" name="append_module_throws_error_when_modules_is_not_inherited_from_teal_modules"/>
    <testcase time="0.00800000000000001" classname="modules" name="append_module_throws_error_is_module_is_not_inherited_from_teal_module"/>
    <testcase time="0.0089999999999999" classname="modules" name="append_module_throws_error_is_module_is_not_inherited_from_teal_module"/>
    <testcase time="0.00700000000000012" classname="modules" name="append_module_appends_a_module_to_children_of_not_nested_teal_modules"/>
    <testcase time="0.00499999999999989" classname="modules" name="append_module_appends_a_module_to_children_of_nested_teal_modules"/>
    <testcase time="0.00499999999999989" classname="modules" name="append_module_produces_teal_modules_with_unique_named_children"/>
    <testcase time="0.004" classname="modules" name="format.teal_modules_returns_proper_structure"/>
  </testsuite>
  <testsuite name="rcode_utils" timestamp="2024-03-15T19:03:05Z" hostname="7a06ccc70624" tests="7" skipped="0" failures="0" errors="0" time="0.05">
    <testcase time="0.00700000000000012" classname="rcode_utils" name="With_no_teal.load_nest_code_option_set_get_rcode_str_install_returns_default_string"/>
    <testcase time="0.00300000000000011" classname="rcode_utils" name="With_teal.load_nest_code_option_set_to_character_get_rcode_str_install_returns_option_value"/>
    <testcase time="0.00099999999999989" classname="rcode_utils" name="With_teal.load_nest_code_option_set_to_character_get_rcode_str_install_returns_option_value"/>
    <testcase time="0.004" classname="rcode_utils" name="When_teal.load_nest_code_option_is_not_character_get_rcode_str_install_silently_returns_default_string"/>
    <testcase time="0.00099999999999989" classname="rcode_utils" name="When_teal.load_nest_code_option_is_not_character_get_rcode_str_install_silently_returns_default_string"/>
    <testcase time="0.0230000000000001" classname="rcode_utils" name="get_rcode_libraries_returns_current_session_packages"/>
    <testcase time="0.0110000000000001" classname="rcode_utils" name="get_datasets_code_returns_code_only_for_specified_datanames"/>
  </testsuite>
  <testsuite name="report_previewer_module" timestamp="2024-03-15T19:03:05Z" hostname="7a06ccc70624" tests="5" skipped="0" failures="0" errors="0" time="0.026">
    <testcase time="0.00999999999999979" classname="report_previewer_module" name="report_previewer_module_throws_error_if_label_is_not_string"/>
    <testcase time="0.00499999999999989" classname="report_previewer_module" name="report_previewer_module_throws_error_if_label_is_not_string"/>
    <testcase time="0.00500000000000034" classname="report_previewer_module" name="report_previewer_module_throws_no_error_and_stores_label_if_label_is_string"/>
    <testcase time="0.00199999999999978" classname="report_previewer_module" name="report_previewer_module_throws_no_error_and_stores_label_if_label_is_string"/>
    <testcase time="0.004" classname="report_previewer_module" name="report_previewer_module_default_label_is_Report_previewer_"/>
  </testsuite>
  <testsuite name="snapshot_manager" timestamp="2024-03-15T19:03:05Z" hostname="7a06ccc70624" tests="1" skipped="0" failures="0" errors="1" time="0.038">
    <testcase time="0.0380000000000003" classname="snapshot_manager" name="snapshot_manager_holds_initial_state_in_history">
      <error type="error" message="Error in `(function (id, slices_global, mapping_matrix, datasets)  ('test-snapshot_manager.R:29:3')">Error in `(function (id, slices_global, mapping_matrix, datasets) 
{
    checkmate::assert_character(id)
    checkmate::assert_true(is.reactive(slices_global))
    checkmate::assert_class(isolate(slices_global()), "teal_slices")
    checkmate::assert_true(is.reactive(mapping_matrix))
    checkmate::assert_data_frame(isolate(mapping_matrix()), null.ok = TRUE)
    checkmate::assert_list(datasets, types = "FilteredData", 
        any.missing = FALSE, names = "named")
    moduleServer(id, function(input, output, session) {
        logger::log_trace("snapshot_manager_srv initializing")
        ns &lt;- session$ns
        filter &lt;- isolate(slices_global())
        snapshot_history &lt;- reactiveVal({
            list(`Initial application state` = as.list(filter, 
                recursive = TRUE))
        })
        observeEvent(input$snapshot_add, {
            logger::log_trace("snapshot_manager_srv: snapshot_add button clicked")
            showModal(modalDialog(textInput(ns("snapshot_name"), 
                "Name the snapshot", width = "100%", placeholder = "Meaningful, unique name"), 
                footer = tagList(actionButton(ns("snapshot_name_accept"), 
                  "Accept", icon = icon("thumbs-up")), modalButton(label = "Cancel", 
                  icon = icon("thumbs-down"))), size = "s"))
        })
        observeEvent(input$snapshot_name_accept, {
            logger::log_trace("snapshot_manager_srv: snapshot_name_accept button clicked")
            snapshot_name &lt;- trimws(input$snapshot_name)
            if (identical(snapshot_name, "")) {
                logger::log_trace("snapshot_manager_srv: snapshot name rejected")
                showNotification("Please name the snapshot.", 
                  type = "message")
                updateTextInput(inputId = "snapshot_name", value = "", 
                  placeholder = "Meaningful, unique name")
            }
            else if (is.element(make.names(snapshot_name), make.names(names(snapshot_history())))) {
                logger::log_trace("snapshot_manager_srv: snapshot name rejected")
                showNotification("This name is in conflict with other snapshot names. Please choose a different one.", 
                  type = "message")
                updateTextInput(inputId = "snapshot_name", value = "", 
                  placeholder = "Meaningful, unique name")
            }
            else {
                logger::log_trace("snapshot_manager_srv: snapshot name accepted, adding snapshot")
                snapshot &lt;- as.list(slices_global(), recursive = TRUE)
                attr(snapshot, "mapping") &lt;- matrix_to_mapping(mapping_matrix())
                snapshot_update &lt;- c(snapshot_history(), list(snapshot))
                names(snapshot_update)[length(snapshot_update)] &lt;- snapshot_name
                snapshot_history(snapshot_update)
                removeModal()
                shinyjs::click(id = "teal-main_ui-wunder_bar-show_snapshot_manager", 
                  asis = TRUE)
            }
        })
        observeEvent(input$snapshot_load, {
            logger::log_trace("snapshot_manager_srv: snapshot_load button clicked")
            showModal(modalDialog(fileInput(ns("snapshot_file"), 
                "Choose snapshot file", accept = ".json", width = "100%"), 
                textInput(ns("snapshot_name"), "Name the snapshot (optional)", 
                  width = "100%", placeholder = "Meaningful, unique name"), 
                footer = tagList(actionButton(ns("snaphot_file_accept"), 
                  "Accept", icon = icon("thumbs-up")), modalButton(label = "Cancel", 
                  icon = icon("thumbs-down")))))
        })
        observeEvent(input$snaphot_file_accept, {
            logger::log_trace("snapshot_manager_srv: snapshot_file_accept button clicked")
            snapshot_name &lt;- trimws(input$snapshot_name)
            if (identical(snapshot_name, "")) {
                logger::log_trace("snapshot_manager_srv: no snapshot name provided, naming after file")
                snapshot_name &lt;- tools::file_path_sans_ext(input$snapshot_file$name)
            }
            if (is.element(make.names(snapshot_name), make.names(names(snapshot_history())))) {
                logger::log_trace("snapshot_manager_srv: snapshot name rejected")
                showNotification("This name is in conflict with other snapshot names. Please choose a different one.", 
                  type = "message")
                updateTextInput(inputId = "snapshot_name", value = "", 
                  placeholder = "Meaningful, unique name")
            }
            else {
                logger::log_trace("snapshot_manager_srv: snapshot name accepted, loading snapshot")
                snapshot_state &lt;- try(slices_restore(input$snapshot_file$datapath))
                if (!inherits(snapshot_state, "modules_teal_slices")) {
                  logger::log_trace("snapshot_manager_srv: snapshot file corrupt")
                  showNotification("File appears to be corrupt.", 
                    type = "error")
                }
                else if (!identical(attr(snapshot_state, "app_id"), 
                  attr(slices_global(), "app_id"))) {
                  logger::log_trace("snapshot_manager_srv: snapshot not compatible with app")
                  showNotification("This snapshot file is not compatible with the app and cannot be loaded.", 
                    type = "warning")
                }
                else {
                  logger::log_trace("snapshot_manager_srv: snapshot loaded, adding to history")
                  snapshot &lt;- as.list(snapshot_state, recursive = TRUE)
                  snapshot_update &lt;- c(snapshot_history(), list(snapshot))
                  names(snapshot_update)[length(snapshot_update)] &lt;- snapshot_name
                  snapshot_history(snapshot_update)
                  logger::log_trace("snapshot_manager_srv: restoring snapshot")
                  mapping_unfolded &lt;- unfold_mapping(attr(snapshot_state, 
                    "mapping"), names(datasets))
                  mapply(function(filtered_data, filter_ids) {
                    filtered_data$clear_filter_states(force = TRUE)
                    slices &lt;- Filter(function(x) x$id %in% filter_ids, 
                      snapshot_state)
                    filtered_data$set_filter_state(slices)
                  }, filtered_data = datasets, filter_ids = mapping_unfolded)
                  slices_global(snapshot_state)
                  removeModal()
                }
            }
        })
        observeEvent(input$snapshot_reset, {
            logger::log_trace("snapshot_manager_srv: snapshot_reset button clicked, restoring snapshot")
            s &lt;- "Initial application state"
            snapshot &lt;- snapshot_history()[[s]]
            snapshot_state &lt;- as.teal_slices(snapshot)
            mapping_unfolded &lt;- unfold_mapping(attr(snapshot_state, 
                "mapping"), names(datasets))
            mapply(function(filtered_data, filter_ids) {
                filtered_data$clear_filter_states(force = TRUE)
                slices &lt;- Filter(function(x) x$id %in% filter_ids, 
                  snapshot_state)
                filtered_data$set_filter_state(slices)
            }, filtered_data = datasets, filter_ids = mapping_unfolded)
            slices_global(snapshot_state)
            removeModal()
        })
        observers &lt;- reactiveValues()
        handlers &lt;- reactiveValues()
        divs &lt;- reactiveValues()
        observeEvent(snapshot_history(), {
            logger::log_trace("snapshot_manager_srv: snapshot history modified, updating snapshot list")
            lapply(names(snapshot_history())[-1L], function(s) {
                id_pickme &lt;- sprintf("pickme_%s", make.names(s))
                id_saveme &lt;- sprintf("saveme_%s", make.names(s))
                id_rowme &lt;- sprintf("rowme_%s", make.names(s))
                if (!is.element(id_pickme, names(observers))) {
                  observers[[id_pickme]] &lt;- observeEvent(input[[id_pickme]], 
                    {
                      snapshot &lt;- snapshot_history()[[s]]
                      snapshot_state &lt;- as.teal_slices(snapshot)
                      mapping_unfolded &lt;- unfold_mapping(attr(snapshot_state, 
                        "mapping"), names(datasets))
                      mapply(function(filtered_data, filter_ids) {
                        filtered_data$clear_filter_states(force = TRUE)
                        slices &lt;- Filter(function(x) x$id %in% 
                          filter_ids, snapshot_state)
                        filtered_data$set_filter_state(slices)
                      }, filtered_data = datasets, filter_ids = mapping_unfolded)
                      slices_global(snapshot_state)
                      removeModal()
                    })
                }
                if (!is.element(id_saveme, names(handlers))) {
                  output[[id_saveme]] &lt;- downloadHandler(filename = function() {
                    sprintf("teal_snapshot_%s_%s.json", s, Sys.Date())
                  }, content = function(file) {
                    snapshot &lt;- snapshot_history()[[s]]
                    snapshot_state &lt;- as.teal_slices(snapshot)
                    slices_store(tss = snapshot_state, file = file)
                  })
                  handlers[[id_saveme]] &lt;- id_saveme
                }
                if (!is.element(id_rowme, names(divs))) {
                  divs[[id_rowme]] &lt;- tags$div(class = "manager_table_row", 
                    tags$span(tags$h5(s)), actionLink(inputId = ns(id_pickme), 
                      label = icon("circle-check"), title = "select"), 
                    downloadLink(outputId = ns(id_saveme), label = icon("save"), 
                      title = "save to file"))
                }
            })
        })
        output$snapshot_list &lt;- renderUI({
            rows &lt;- lapply(rev(reactiveValuesToList(divs)), function(d) d)
            if (length(rows) == 0L) {
                tags$div(class = "manager_placeholder", "Snapshots will appear here.")
            }
            else {
                rows
            }
        })
        snapshot_history
    })
})(id = "test", slices_global = structure(function (x) 
{
    if (missing(x)) {
        rv$get()
    }
    else {
        force(x)
        rv$set(x)
    }
}, class = c("reactiveVal", "reactive", "function"), label = "slices_global", .impl = &lt;environment&gt;), 
    mapping_matrix = structure(function () 
    {
        .dependents$register()
        if (.invalidated || .running) {
            ..stacktraceoff..(self$.updateValue())
        }
        if (.error) {
            stop(.value)
        }
        if (.visible) 
            .value
        else invisible(.value)
    }, observable = &lt;environment&gt;, cacheHint = list(userExpr = {
        module_states &lt;- lapply(filtered_data_list, function(x) x$get_filter_state())
        mapping_ragged &lt;- lapply(module_states, function(x) vapply(x, 
            `[[`, character(1L), "id"))
        all_names &lt;- vapply(slices_global(), `[[`, character(1L), 
            "id")
        mapping_smooth &lt;- lapply(mapping_ragged, is.element, 
            el = all_names)
        as.data.frame(mapping_smooth, row.names = all_names, 
            check.names = FALSE)
    }), class = c("reactiveExpr", "reactive", "function")), filtered_data_list = list(
        m1 = &lt;environment&gt;, m2 = &lt;environment&gt;, m3 = &lt;environment&gt;))`: unused argument (filtered_data_list = list(&lt;environment&gt;, &lt;environment&gt;, &lt;environment&gt;))
Backtrace:
     ▆
  1. └─shiny::testServer(...) at test-snapshot_manager.R:29:3
  2.   ├─shiny:::withMockContext(session, rlang::exec(app, !!!args))
  3.   │ ├─shiny::isolate(...)
  4.   │ │ ├─shiny::..stacktraceoff..(...)
  5.   │ │ └─ctx$run(...)
  6.   │ │   ├─promises::with_promise_domain(...)
  7.   │ │   │ └─domain$wrapSync(expr)
  8.   │ │   ├─shiny::withReactiveDomain(...)
  9.   │ │   │ └─promises::with_promise_domain(...)
 10.   │ │   │   └─domain$wrapSync(expr)
 11.   │ │   │     └─base::force(expr)
 12.   │ │   └─env$runWith(self, func)
 13.   │ │     └─shiny (local) contextFunc()
 14.   │ │       └─shiny::..stacktraceon..(expr)
 15.   │ ├─shiny::withReactiveDomain(...)
 16.   │ │ └─promises::with_promise_domain(...)
 17.   │ │   └─domain$wrapSync(expr)
 18.   │ │     └─base::force(expr)
 19.   │ └─withr::with_options(...)
 20.   │   └─base::force(code)
 21.   └─rlang::exec(app, !!!args)</error>
    </testcase>
  </testsuite>
  <testsuite name="tdata" timestamp="2024-03-15T19:03:05Z" hostname="7a06ccc70624" tests="41" skipped="0" failures="0" errors="0" time="5.138">
    <testcase time="4.792" classname="tdata" name="new_tdata_accepts_reactive_and_not_reactive_MAE_and_data.frames"/>
    <testcase time="0.00800000000000001" classname="tdata" name="new_tdata_throws_error_if_data_is_not_a_list_with_unique_names"/>
    <testcase time="0.00499999999999989" classname="tdata" name="new_tdata_throws_error_if_data_is_not_a_list_with_unique_names"/>
    <testcase time="0.00600000000000023" classname="tdata" name="new_tdata_throws_error_if_data_is_not_a_list_with_unique_names"/>
    <testcase time="0.00800000000000001" classname="tdata" name="new_tdata_throws_error_if_contents_of_data_list_are_not_of_correct_type"/>
    <testcase time="0.00699999999999967" classname="tdata" name="new_tdata_throws_error_if_code_is_not_character_or_reactive_character"/>
    <testcase time="0.00800000000000001" classname="tdata" name="new_tdata_throws_error_if_code_is_not_character_or_reactive_character"/>
    <testcase time="0.00499999999999989" classname="tdata" name="new_tdata_accepts_character_and_reactive_characters_for_code_argument"/>
    <testcase time="0.00400000000000045" classname="tdata" name="new_tdata_accepts_character_and_reactive_characters_for_code_argument"/>
    <testcase time="0.00800000000000001" classname="tdata" name="new_tdata_throws_error_if_join_keys_is_not_of_class_join_keys"/>
    <testcase time="0.00599999999999934" classname="tdata" name="new_tdata_throws_no_error_if_join_keys_is_of_class_join_keys"/>
    <testcase time="0.00900000000000034" classname="tdata" name="new_tdata_throws_error_if_metadata_is_not_a_list_with_unique_names_a_subset_of_the_names_of_data"/>
    <testcase time="0.00699999999999967" classname="tdata" name="new_tdata_throws_error_if_metadata_is_not_a_list_with_unique_names_a_subset_of_the_names_of_data"/>
    <testcase time="0.00700000000000056" classname="tdata" name="new_tdata_throws_error_if_metadata_is_not_a_list_with_unique_names_a_subset_of_the_names_of_data"/>
    <testcase time="0.00699999999999967" classname="tdata" name="new_tdata_does_not_throw_error_with_valid_metadata"/>
    <testcase time="0.00800000000000001" classname="tdata" name="get_metadata_returns_NULL_if_no_metadata"/>
    <testcase time="0.0080000000000009" classname="tdata" name="get_metadata_returns_NULL_if_no_metadata_for_given_dataset"/>
    <testcase time="0.00699999999999967" classname="tdata" name="get_metadata_returns_metadata_for_given_dataset"/>
    <testcase time="0.00699999999999967" classname="tdata" name="get_metadata_returns_NULL_if_dataset_doesn_t_exist"/>
    <testcase time="0.00699999999999967" classname="tdata" name="get_code_returns_empty_character_if_tdata_object_has_no_code"/>
    <testcase time="0.00900000000000034" classname="tdata" name="get_code_returns_character_of_code_if_tdata_object_has_code"/>
    <testcase time="0.00500000000000078" classname="tdata" name="get_code_returns_character_of_code_if_tdata_object_has_code"/>
    <testcase time="0.00699999999999967" classname="tdata" name="get_code_tdata_accepts_tdata"/>
    <testcase time="0.00999999999999979" classname="tdata" name="get_code_tdata_throws_error_when_input_is_not_tdata"/>
    <testcase time="0.0080000000000009" classname="tdata" name="get_code_tdata_throws_error_when_input_is_not_tdata"/>
    <testcase time="0.00699999999999967" classname="tdata" name="get_code_tdata_returns_character_code"/>
    <testcase time="0.0469999999999988" classname="tdata" name="tdata2env_returns_environment_containing_tdata_contents_"/>
    <testcase time="0.00200000000000067" classname="tdata" name="tdata2env_returns_environment_containing_tdata_contents_"/>
    <testcase time="0.0350000000000001" classname="tdata" name="tdata2env_returns_environment_containing_tdata_contents_"/>
    <testcase time="0.00900000000000034" classname="tdata" name="tdata2env_throws_error_if_argument_is_not_tdata"/>
    <testcase time="0.00799999999999912" classname="tdata" name="join_keys_returns_NULL_if_no_join_keys_object_exists_inside_tdata"/>
    <testcase time="0.00799999999999912" classname="tdata" name="join_keys_returns_join_keys_object_if_it_exists_inside_tdata"/>
    <testcase time="0.0080000000000009" classname="tdata" name="as_tdata_accepts_all_possible_inputs"/>
    <testcase time="0.00599999999999845" classname="tdata" name="as_tdata_accepts_all_possible_inputs"/>
    <testcase time="0.0080000000000009" classname="tdata" name="as_tdata_accepts_all_possible_inputs"/>
    <testcase time="0.0120000000000005" classname="tdata" name="as_tdata_always_returns_tdata_object"/>
    <testcase time="0.000999999999999446" classname="tdata" name="as_tdata_always_returns_tdata_object"/>
    <testcase time="0.00200000000000067" classname="tdata" name="as_tdata_always_returns_tdata_object"/>
    <testcase time="0.00799999999999912" classname="tdata" name="datasets_are_maintained_during_conversion"/>
    <testcase time="0.00500000000000078" classname="tdata" name="datasets_are_maintained_during_conversion"/>
    <testcase time="0.00899999999999856" classname="tdata" name="as_tdata_maintains_code_during_conversion"/>
  </testsuite>
  <testsuite name="teal_data_module-eval_code" timestamp="2024-03-15T19:03:10Z" hostname="7a06ccc70624" tests="16" skipped="0" failures="0" errors="0" time="0.128">
    <testcase time="0.0080000000000009" classname="teal_data_module_eval_code" name="within.teal_data_module_returns_an_object_with_teal_data_module_class"/>
    <testcase time="0.00399999999999956" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_ui_has_modified_namespace_for_id"/>
    <testcase time="0.00200000000000067" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_ui_has_modified_namespace_for_id"/>
    <testcase time="0.000999999999999446" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_ui_has_modified_namespace_for_id"/>
    <testcase time="0.016" classname="teal_data_module_eval_code" name="within.teal_data_module_modifies_the_reactive_tea_data_object"/>
    <testcase time="0.00200000000000067" classname="teal_data_module_eval_code" name="within.teal_data_module_modifies_the_reactive_tea_data_object"/>
    <testcase time="0.0179999999999989" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_will_execute_several_times_until_error"/>
    <testcase time="0.00200000000000067" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_will_execute_several_times_until_error"/>
    <testcase time="0.000999999999999446" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_will_execute_several_times_until_error"/>
    <testcase time="0.0170000000000012" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_throws_error_when_original_teal_data_module_result_is_not_reactive"/>
    <testcase time="0.0149999999999988" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_propagates_qenv_error_from_the_original_first_call"/>
    <testcase time="0.00200000000000067" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_propagates_qenv_error_from_the_original_first_call"/>
    <testcase time="0.0129999999999999" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_an_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.00200000000000067" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_an_arbitrary_object_other_than_teal_data_or_qenv.error_"/>
    <testcase time="0.0219999999999985" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_a_NULL_result"/>
    <testcase time="0.00300000000000011" classname="teal_data_module_eval_code" name="eval_code.teal_data_module_handles_a_NULL_result"/>
  </testsuite>
  <testsuite name="teal_data_module" timestamp="2024-03-15T19:03:10Z" hostname="7a06ccc70624" tests="3" skipped="0" failures="0" errors="0" time="0.023">
    <testcase time="0.00600000000000023" classname="teal_data_module" name="teal_data_module_returns_teal_data_module"/>
    <testcase time="0.00900000000000034" classname="teal_data_module" name="teal_data_module_throws_when_ui_has_other_formals_than_id_only"/>
    <testcase time="0.0080000000000009" classname="teal_data_module" name="teal_data_module_throws_when_server_has_other_formals_than_id_only"/>
  </testsuite>
  <testsuite name="teal_reporter" timestamp="2024-03-15T19:03:10Z" hostname="7a06ccc70624" tests="25" skipped="0" failures="0" errors="0" time="0.174">
    <testcase time="0.0119999999999987" classname="teal_reporter" name="TealReportCard_object_can_be_initialized"/>
    <testcase time="0.00600000000000023" classname="teal_reporter" name="TealReportCard_inherits_from_ReportCard"/>
    <testcase time="0.00699999999999967" classname="teal_reporter" name="TealReportCard_new_returns_an_object_of_type_TealReportCard"/>
    <testcase time="0.027000000000001" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00199999999999889" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00100000000000122" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.000999999999999446" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.000999999999999446" classname="teal_reporter" name="TealReportCard_get_content_returns_content_with_metadata"/>
    <testcase time="0.00500000000000078" classname="teal_reporter" name="TealReportCard_append_src_accepts_a_character"/>
    <testcase time="0.00399999999999956" classname="teal_reporter" name="TealReportCard_append_src_returns_self"/>
    <testcase time="0.00300000000000011" classname="teal_reporter" name="TealReportCard_append_src_returns_title_and_content"/>
    <testcase time="0.00500000000000078" classname="teal_reporter" name="TealReportCard_append_encodings_accepts_list_of_character"/>
    <testcase time="0.00399999999999956" classname="teal_reporter" name="TealReportCard_append_encodings_returns_self"/>
    <testcase time="0.00399999999999956" classname="teal_reporter" name="TealReportCard_append_encodings_returns_title_and_content"/>
    <testcase time="0.000999999999999446" classname="teal_reporter" name="TealReportCard_append_encodings_returns_title_and_content"/>
    <testcase time="0.00700000000000145" classname="teal_reporter" name="TealReportCard_append_fs_accepts_only_a_teal_slices"/>
    <testcase time="0.00799999999999912" classname="teal_reporter" name="TealReportCard_append_fs_accepts_only_a_teal_slices"/>
    <testcase time="0.0080000000000009" classname="teal_reporter" name="TealReportCard_append_fs_returns_self"/>
    <testcase time="0.00799999999999912" classname="teal_reporter" name="TealReportCard_append_fs_returns_title_and_content"/>
    <testcase time="0.00300000000000011" classname="teal_reporter" name="TealReportCard_append_fs_returns_title_and_content"/>
    <testcase time="0.00500000000000078" classname="teal_reporter" name="TealSlicesBlock_new_accepts_teal_slices_only"/>
    <testcase time="0.00499999999999901" classname="teal_reporter" name="TealSlicesBlock_new_accepts_teal_slices_only"/>
    <testcase time="0.0080000000000009" classname="teal_reporter" name="TealSlicesBlock_get_content_returns_yaml_character"/>
    <testcase time="0.00799999999999912" classname="teal_reporter" name="TealSlicesBlock_to_list_returns_list_containing_teal_slices"/>
    <testcase time="0.0310000000000006" classname="teal_reporter" name="TealSlicesBlock_from_list_retains_states_from_a_list"/>
  </testsuite>
  <testsuite name="teal_slices-store" timestamp="2024-03-15T19:03:10Z" hostname="7a06ccc70624" tests="15" skipped="0" failures="0" errors="0" time="0.158">
    <testcase time="0.0470000000000006" classname="teal_slices_store" name="teal_slice_store_restore_supports_NULL_and_character_0_for_choices_and_selected"/>
    <testcase time="0.00399999999999956" classname="teal_slices_store" name="teal_slice_store_restore_supports_NULL_and_character_0_for_choices_and_selected"/>
    <testcase time="0.00399999999999956" classname="teal_slices_store" name="teal_slice_store_restore_supports_NULL_and_character_0_for_choices_and_selected"/>
    <testcase time="0.0139999999999993" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_selected"/>
    <testcase time="0.00300000000000011" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_selected"/>
    <testcase time="0.0140000000000011" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_dates_in_selected"/>
    <testcase time="0.00399999999999956" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_dates_in_selected"/>
    <testcase time="0.0139999999999993" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_choices"/>
    <testcase time="0.00300000000000011" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_POSIXct_timestamps_in_choices"/>
    <testcase time="0.0140000000000011" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_timestamps_in_choices"/>
    <testcase time="0.00399999999999956" classname="teal_slices_store" name="teal_slice_store_restore_supports_saving_Date_timestamps_in_choices"/>
    <testcase time="0.0150000000000006" classname="teal_slices_store" name="teal_slice_store_restore_restores_mixed_Date_characters_as_characters_in_selected"/>
    <testcase time="0.0129999999999999" classname="teal_slices_store" name="teal_slice_store_restore_restores_characters_as_characters_in_selected_and_choices"/>
    <testcase time="0.00199999999999889" classname="teal_slices_store" name="teal_slice_store_restore_restores_characters_as_characters_in_selected_and_choices"/>
    <testcase time="0.00300000000000011" classname="teal_slices_store" name="teal_slice_store_restore_restores_characters_as_characters_in_selected_and_choices"/>
  </testsuite>
  <testsuite name="teal_slices" timestamp="2024-03-15T19:03:10Z" hostname="7a06ccc70624" tests="18" skipped="0" failures="0" errors="0" time="0.106">
    <testcase time="0.00699999999999967" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00100000000000122" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00300000000000011" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.000999999999999446" classname="teal_slices" name="teal_slices_produces_teal_slices_object_with_teal_specific_attributes"/>
    <testcase time="0.00600000000000023" classname="teal_slices" name="teal_slices_fails_when_inexisting_teal_slice_id_is_specified_in_mapping"/>
    <testcase time="0.00699999999999967" classname="teal_slices" name="teal_slices_fails_when_inexisting_teal_slice_id_is_specified_in_mapping"/>
    <testcase time="0.00799999999999912" classname="teal_slices" name="teal_slices_processes_filter_mapping"/>
    <testcase time="0.00700000000000145" classname="teal_slices" name="teal_slices_processes_filter_mapping"/>
    <testcase time="0.0119999999999987" classname="teal_slices" name="teal_slices_drops_non_global_filters_if_module_specific_FALSE"/>
    <testcase time="0.00700000000000145" classname="teal_slices" name="teal_slices_drops_non_global_filters_if_module_specific_FALSE"/>
    <testcase time="0.0139999999999993" classname="teal_slices" name="deep_copy_filters_copies_teal_slice_changes_pointer_of_teal_slice_object_but_values_remain_the_same"/>
    <testcase time="0.00300000000000011" classname="teal_slices" name="deep_copy_filters_copies_teal_slice_changes_pointer_of_teal_slice_object_but_values_remain_the_same"/>
    <testcase time="0.00600000000000023" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00399999999999956" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00399999999999956" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00500000000000078" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00600000000000023" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
    <testcase time="0.00499999999999901" classname="teal_slices" name="teal_slices_mapping_should_be_an_empty_list_or_a_named_list_or_missing"/>
  </testsuite>
  <testsuite name="utils" timestamp="2024-03-15T19:03:10Z" hostname="7a06ccc70624" tests="35" skipped="0" failures="0" errors="0" time="0.466">
    <testcase time="0.0080000000000009" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0389999999999997" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.000999999999999446" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.00200000000000067" classname="utils" name="get_teal_bs_theme"/>
    <testcase time="0.0120000000000005" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.000999999999999446" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00200000000000067" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.000999999999999446" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00199999999999889" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.00100000000000122" classname="utils" name="report_card_template_function_returns_TealReportCard_object_with_appropriate_content_and_labels"/>
    <testcase time="0.0109999999999992" classname="utils" name="teal_data_to_filtered_data_return_FilteredData_class"/>
    <testcase time="0.00399999999999956" classname="utils" name="teal_data_datanames_returns_names_of_the_env_s_objects_when_datanames_not_set"/>
    <testcase time="0.00500000000000078" classname="utils" name="teal_data_datanames_returns_datanames_which_are_set_by_teal.data_datanames"/>
    <testcase time="0.215" classname="utils" name="modules_datasets_returns_correct_structure"/>
    <testcase time="0.00600000000000023" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00600000000000023" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00600000000000023" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00600000000000023" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00599999999999845" classname="utils" name="validate_app_title_tag_works_on_validating_the_title_tag"/>
    <testcase time="0.00500000000000078" classname="utils" name="build_app_title_builts_a_valid_tag"/>
    <testcase time="0.00200000000000067" classname="utils" name="build_app_title_builts_a_valid_tag"/>
    <testcase time="0.00600000000000023" classname="utils" name="create_app_id_data_accepts_teal_data_or_teal_data_module"/>
    <testcase time="0.00199999999999889" classname="utils" name="create_app_id_data_accepts_teal_data_or_teal_data_module"/>
    <testcase time="0.00600000000000023" classname="utils" name="create_app_id_data_accepts_teal_data_or_teal_data_module"/>
    <testcase time="0.00600000000000023" classname="utils" name="create_app_id_modules_accepts_modules"/>
    <testcase time="0.00699999999999967" classname="utils" name="create_app_id_modules_accepts_modules"/>
    <testcase time="0.00600000000000023" classname="utils" name="create_app_id_returns_a_character_string"/>
    <testcase time="0.0129999999999999" classname="utils" name="create_app_id_returns_different_hash_for_different_data"/>
    <testcase time="0.0129999999999999" classname="utils" name="create_app_id_returns_different_hash_for_different_modules"/>
    <testcase time="0.0549999999999997" classname="utils" name="defunction_returns_a_string_when_passed_a_function"/>
    <testcase time="0.00399999999999956" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.00100000000000122" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.00199999999999889" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.00100000000000122" classname="utils" name="defunction_returns_non_function_atomic_as_is"/>
    <testcase time="0.00300000000000011" classname="utils" name="defunction_recursively_goes_down_a_list"/>
  </testsuite>
  <testsuite name="validate_has_data" timestamp="2024-03-15T19:03:11Z" hostname="7a06ccc70624" tests="17" skipped="0" failures="0" errors="0" time="0.086">
    <testcase time="0.00699999999999967" classname="validate_has_data" name="validate_has_data_throws_no_error_when_data_has_at_least_as_many_rows_as_min_nrow"/>
    <testcase time="0.00199999999999889" classname="validate_has_data" name="validate_has_data_throws_no_error_when_data_has_at_least_as_many_rows_as_min_nrow"/>
    <testcase time="0.00700000000000145" classname="validate_has_data" name="validate_has_data_throws_error_when_min_nrow_rows_of_data"/>
    <testcase time="0.00300000000000011" classname="validate_has_data" name="validate_has_data_accepts_logical_complete_argument"/>
    <testcase time="0.00199999999999889" classname="validate_has_data" name="validate_has_data_accepts_logical_complete_argument"/>
    <testcase time="0.00699999999999967" classname="validate_has_data" name="validate_has_data_throws_error_when_data_has_NA_and_complete_is_set_to_TRUE"/>
    <testcase time="0.00300000000000011" classname="validate_has_data" name="validate_has_data_accepts_logical_allow_inf_argument"/>
    <testcase time="0.00500000000000078" classname="validate_has_data" name="validate_has_data_accepts_logical_allow_inf_argument"/>
    <testcase time="0.00600000000000023" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00600000000000023" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00499999999999901" classname="validate_has_data" name="validate_has_data_accepts_throws_error_when_data_has_Inf_values_and_allow_inf_is_set_to_FALSE"/>
    <testcase time="0.00399999999999956" classname="validate_has_data" name="validate_has_data_allow_inf_argument_ignores_non_numeric_columns"/>
    <testcase time="0.00500000000000078" classname="validate_has_data" name="validate_has_data_allow_inf_argument_ignores_non_numeric_columns"/>
    <testcase time="0.00600000000000023" classname="validate_has_data" name="validate_has_data_returns_message_when_msg_argument_is_set"/>
    <testcase time="0.00699999999999967" classname="validate_has_data" name="validate_has_data_returns_message_msg_argument_is_set_and_complete_is_set_to_TRUE"/>
    <testcase time="0.00600000000000023" classname="validate_has_data" name="validate_has_data_returns_throws_error_with_non_character_msg_input"/>
    <testcase time="0.00499999999999901" classname="validate_has_data" name="validate_has_data_returns_throws_error_with_non_character_msg_input"/>
  </testsuite>
  <testsuite name="validate_inputs" timestamp="2024-03-15T19:03:11Z" hostname="7a06ccc70624" tests="36" skipped="0" failures="0" errors="0" time="0.522">
    <testcase time="0.0100000000000016" classname="validate_inputs" name="invalid_arguments_raise_errors"/>
    <testcase time="0.00399999999999956" classname="validate_inputs" name="invalid_arguments_raise_errors"/>
    <testcase time="0.020999999999999" classname="validate_inputs" name="disabled_validators_raise_warnings_individual_validators_"/>
    <testcase time="0.0150000000000006" classname="validate_inputs" name="disabled_validators_raise_warnings_validator_list_"/>
    <testcase time="0.016" classname="validate_inputs" name="disabled_validators_raise_warnings_nested_validator_list_"/>
    <testcase time="0.093" classname="validate_inputs" name="valid_inputs_produce_desired_output_individual_validators_"/>
    <testcase time="0.0210000000000008" classname="validate_inputs" name="valid_inputs_produce_desired_output_validator_list_"/>
    <testcase time="0.0179999999999989" classname="validate_inputs" name="valid_inputs_produce_desired_output_nested_validator_list_"/>
    <testcase time="0.0240000000000009" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0220000000000002" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0219999999999985" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_individual_validators_"/>
    <testcase time="0.0250000000000004" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0229999999999997" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0220000000000002" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_validator_list_"/>
    <testcase time="0.0250000000000004" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0229999999999997" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0220000000000002" classname="validate_inputs" name="invalid_inputs_raise_errors_in_output_nested_validator_list_"/>
    <testcase time="0.0300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00699999999999967" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00699999999999967" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00699999999999967" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00699999999999967" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000067" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999889" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000067" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000067" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999889" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000067" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00199999999999889" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.00200000000000067" classname="validate_inputs" name="error_message_is_formatted_properly"/>
    <testcase time="0.0259999999999998" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
    <testcase time="0.00300000000000011" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
    <testcase time="0.00399999999999956" classname="validate_inputs" name="different_validation_modes_produce_proper_messages"/>
  </testsuite>
</testsuites>
